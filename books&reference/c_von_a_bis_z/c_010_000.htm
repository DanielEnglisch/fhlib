<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: C von A bis Z – 10 Kontrollstrukturen</title>
<meta name="title" content="Galileo Computing :: C von A bis Z">
<meta name="author" content="J&uuml;rgen Wolf">
<meta name="publisher" content="Galileo Press 2006">
<meta name="copyright" content="Galileo Press 2006">
<meta name="description" content="C von A bis Z - Das umfassende Handbuch f&uuml;r Linux, Unix und Windows – 2., aktualisierte und erweiterte Auflage 2006, geb., mit CD und Referenzkarte – ISBN 3-89842-643-2">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href="c_009_000.htm">
<link rel="next" href="c_010_001.htm"><script type="text/javascript" language="JavaScript"><!--
function OpenWin(url,name,height,width)
{
  var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
  InfoWin.focus();
}
//--></script></head>
<body vlink="#000099" link="#000099" alink="#000099">
    <table width="100%" height="74" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
        <tr>
            <td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook/?GPP=opc"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
            <td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=opc"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle B&uuml;cher. Auch f&uuml;r Einsteiger." title="Galileo Computing - Professionelle B&uuml;cher. Auch f&uuml;r Einsteiger."></a></td>
        </tr>
    </table>
    <div align="right"><a href="http://www.galileocomputing.de/?GPP=opc" class="navnav">Professionelle B&uuml;cher. Auch f&uuml;r Einsteiger.</a></div>
    <br />
<table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td width="156" valign="top">
    <table border="0" cellpadding="0" cellspacing="0" width="100%" align="left">
        <tr>
            <td colspan="2" class="nav1" align="left" valign="top" height="150">
                <table class="tbl1" width="150" border="0" cellpadding="3" cellspacing="0">
<tr>
<td class="tbl2" height="25"><a class="nav" href="./index.htm">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="./c_000Vorwort_000.htm#Xxx999266">Vorwort</a></td>
</tr>
<tr>
<td><a class="navnav" href="./c_000VorwortGutachter_000.htm#Xxx999275">Vorwort des Gutachters</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_001_000.htm#Xxx999328">1 Einstieg in C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_002_000.htm#Xxx999328">2 Das erste Programm</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_003_000.htm#Xxx999328">3 Zeichens&auml;tze</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_004_000.htm#Xxx999329">4 Kommentare in C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_005_000.htm#Xxx999330">5 Formatierte Eingabe mit scanf()</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_006_000.htm#Xxx999330">6 Formatierte Ausgabe mit printf</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_007_000.htm#Xxx999329">7 Elementare Datentypen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_008_000.htm#Xxx999328">8 Operatoren</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_009_000.htm#Xxx999328">9 Typenumwandlung</A></td>
</tr>
<tr>
<td><A class="navh" href="./c_010_000.htm#Xxx999328">10 Kontrollstrukturen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_011_000.htm#Xxx999328">11 Funktionen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_012_000.htm#Xxx999328">12 Pr&auml;prozessor-Direktiven</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_013_000.htm#Xxx999328">13 Arrays</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_014_000.htm#Xxx999328">14 Zeiger (Pointer)</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_015_000.htm#Xxx999328">15 Kommandozeilenargumente</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_016_000.htm#Xxx999328">16 Dynamische Speicherverwaltung</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_017_000.htm#Xxx999328">17 Strukturen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_018_000.htm#Xxx999328">18 Ein-/Ausgabe-Funktionen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_019_000.htm#Xxx999328">19 Attribute von Dateien und Arbeiten mit Verzeichnissen (nicht ANSI C)</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_020_000.htm#Xxx999328">20 Arbeiten mit variablen langen Argumentlisten – &lt;stdarg.h&gt;</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_021_000.htm#Xxx999328">21 Zeitroutinen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_022_000.htm#Xxx999328">22 Weitere Headerdateien und ihre Funktionen (ANSI C)</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_023_000.htm#Xxx999328">23 Dynamische Datenstrukturen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_024_000.htm#Xxx999328">24 Algorithmen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_025_000.htm#Xxx999328">25 Sicheres Programmieren</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_026_000.htm#Xxx999328">26 CGI mit C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_027_000.htm#Xxx999328">27 MySQL und C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_028_000.htm#Xxx999328">28 Netzwerkprogrammierung und Cross-Plattform-Entwicklung</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_029_000.htm#Xxx999328">29 Wie geht’s jetzt weiter?</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_030Anhang_000.htm#Xxx999266">A Anhang</A></td>
</tr>
<tr>
<td><a class="navnav" href="./stichwort.htm#Xxx512322">Index</a></td>
</tr>
<tr><td><br /><a class="navnav" href="http://download.galileo-press.de/openbook/c_von_a_bis_z/galileocomputing_c_von_a_bis_z.zip"><strong>Download:</strong><br />- ZIP, ca. 8,5 MB</a></td></tr>
<tr><td><a class="navnav" href="http://www.galileocomputing.de/899?GPP=opc">Buch bestellen</a></td></tr>
<tr><td><a class="navnav" href="mailto:stefan.krumbiegel@galileo-press.de?subject=Meinung%20zu%20C%20von%20A%20bis%20Z%20(openbook)">Ihre Meinung?</a><br /><br /></td></tr>
</table></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10"></td>
<td width="85%" valign="top" align="center">
    <div align="center">
        <table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
            <tr>
                <td width="100%" class="start" colspan="1" height="22" align="center">
                    <table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a class="navnav" href="c_009_000.htm"> &lt;&lt; zur&uuml;ck</a></td>
<td width="49%">
<div align="center"><a href="http://www.galileocomputing.de/?GPP=opc" class="navnav">Galileo Computing /</a><a class="navnav" href="http://www.galileocomputing.de/katalog/openbook/?GPP=opc"> &lt;openbook&gt; /</a><a href="./index.htm" class="navnav"> C von A bis Z</a></div>
</td>
<td align="right" width="25%">
<div align="right"><a class="navnav" href="c_010_001.htm">vor &gt;&gt; </a></div>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td width="100%" valign="top">
    <table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
        <tr>
            <td colspan="2"><a href="http://www.galileocomputing.de/899?GPP=opc" class="buchtitel">C von A bis Z</a><span class="autor"> von J&uuml;rgen Wolf</span><br><span class="untertitel">Das umfassende Handbuch f&uuml;r Linux, Unix und Windows <br />– 2., aktualisierte und erweiterte Auflage 2006</span></td>
        </tr>
        <tr>
            <td valign="top" width="90"><a href="http://www.galileocomputing.de/899?GPP=opc"><img src="common/643.gif" border="0" alt="Buch: C von A bis Z" title="Buch: C von A bis Z" align="left"><br /><br /><span class="autor"><strong>C von A bis Z</strong><br />1.116 S., mit CD, Referenzkarte, 39,90 Euro<br />Galileo Computing<br />ISBN 3-89842-643-2</span></a></a></td>
            <td width="80%">
<table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="3" class="kap"><b>Kapitel <a class="navh" href="#RxxobKap010000040026E41F02918C">10 Kontrollstrukturen</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a class="navh" href="#RxxobKap010000040026E41F029192">10.1 Verzweigungen mit der if-Bedingung</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a class="navh" href="#RxxobKap010000040026E41F029196">10.1.1 Anweisungsblock</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_010_001.htm#RxxobKap010001040026FF1F03A18C">10.2 Die Verzweigung mit else if</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_010_002.htm#RxxobKap010002040027001F02518C">10.3 Die Verzweigung mit else</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_010_003.htm#RxxobKap010003040027011F01918C">10.4 Der !-Operator (logischer Operator)</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_010_004.htm#RxxobKap010004040027021F02B18C">10.5 Logisches UND (&amp;&amp;) – Logisches ODER (||)</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_010_005.htm#RxxobKap010005040027031F01118C">10.6 Bedingungsoperator ?:</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_010_006.htm#RxxobKap010006040027041F02A18C">10.7 Fallunterscheidung: die switch-Verzweigung</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_010_006.htm#RxxobKap010006040027041F02A19D">10.7.1 default</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_010_007.htm#RxxobKap010007040027051F02D18C">10.8 Die while-Schleife</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_010_007.htm#RxxobKap010007040027051F02D19D">10.8.1 Endlosschleife (while)</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_010_007.htm#RxxobKap010007040027051F02D1A6">10.8.2 Fehlervermeidung bei while-Schleifen</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_010_008.htm#RxxobKap010008040027061F03618C">10.9 Die do while-Schleife</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_010_009.htm#RxxobKap010009040027071F04518C">10.10 Die for-Schleife</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_010_009.htm#RxxobKap010009040027071F04519F">10.10.1 Beispiele f&uuml;r eine for-Schleife</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_010_010.htm#RxxobKap010010040027081F04618C">10.11 Kontrollierte Spr&uuml;nge</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_010_010.htm#RxxobKap010010040027081F046193">10.11.1 continue</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_010_010.htm#RxxobKap010010040027081F04619C">10.11.2 break</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_010_011.htm#RxxobKap010011040027091F04318C">10.12 Direkte Spr&uuml;nge mit goto</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_010_012.htm#RxxobKap0100120400270A1F04218C">10.13 Notationsstil</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_010_012.htm#RxxobKap0100120400270A1F04218E">10.13.1 K&amp;R-Stil</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_010_012.htm#RxxobKap0100120400270A1F042190">10.13.2 Whitesmith-Stil</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_010_012.htm#RxxobKap0100120400270A1F042192">10.13.3 Allman-Stil</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_010_012.htm#RxxobKap0100120400270A1F042194">10.13.4 GNU EMACS-Stil</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_010_012.htm#RxxobKap0100120400270A1F042196">10.13.5 Der Stil des Autors ;) (K&amp;R-like)</a></b></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td>
<h1 class="t1">Kapitel 10 Kontrollstrukturen<a id="RxxobKap010000040026E41F02918C" name="RxxobKap010000040026E41F02918C"></a></h1>
<p class="anleser"><i>Mit dem bisherigen Wissen k&ouml;nnen Sie die Programme immer nur sequenziell ablaufen lassen, sie laufen also immer Zeile f&uuml;r Zeile ab. In diesem Kapitel wird nun der sequenzielle Programmfluss gebrochen.</i></p>
<p>Folgende drei M&ouml;glichkeiten haben Sie, um den sequenziellen Programmfluss zu &auml;ndern:</p>
<table width="100%" border="0">
<tr>
<td valign="baseline" width="16"><img src="common/gp.gif" width="8" height="9" border="0" alt="gp"> 
        </td>
<td valign="top" width="100%" align="left"> Verzweigungen: Im Programm wird eine Bedingung definiert, die entscheidet, an welcher Stelle das Programm fortgesetzt werden soll.</td>
</tr>
</table>
<table width="100%" border="0">
<tr>
<td valign="baseline" width="16"><img src="common/gp.gif" width="8" height="9" border="0" alt="gp"> 
        </td>
<td valign="top" width="100%" align="left"> Schleifen (Iteration): Ein Anweisungsblock wird sooft wiederholt, bis eine bestimmte Abbruchbedingung erf&uuml;llt wird.</td>
</tr>
</table>
<table width="100%" border="0">
<tr>
<td valign="baseline" width="16"><img src="common/gp.gif" width="8" height="9" border="0" alt="gp"> 
        </td>
<td valign="top" width="100%" align="left"> Spr&uuml;nge: Die Programmausf&uuml;hrung wird mit Hilfe von Sprungmarken an einer anderen Position fortgesetzt. Obwohl nach wie vor m&ouml;glich, werden Spr&uuml;nge in einem Programm mittlerweile als schlechter Stil angesehen und sind auch nicht notwendig. Es wird dabei von direkten Spr&uuml;ngen gesprochen. Mit Schl&uuml;sselworten wie <span class="listing">return</span>, <span class="listing">break</span>, <span class="listing">continue</span>, <span class="listing">exit</span> und der Funktion <span class="listing">abort()</span> k&ouml;nnen jedoch kontrollierte Spr&uuml;nge ausgef&uuml;hrt werden.</td>
</tr>
</table>
<a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang" title="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2">10.1 Verzweigungen mit der if-Bedingun<a id="Xxx999334" name="Xxx999334"></a>g<a id="RxxobKap010000040026E41F029192" name="RxxobKap010000040026E41F029192"></a> 
      <a href="#t2t32"><img src="common/down.gif" width="15" height="15" border="0" alt="down"></a><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"></h2>
<p><a id="Xxx999336" name="Xxx999336"></a>Die <span class="listing">if</span>-Bedingung hat folgende Syntax:</p>
<pre>if(BEDINGUNG == wahr) {
   Anweisung1;
 }
Anweisung2;</pre>
<p>Wenn die Bedingung zwischen den Klammern des <span class="listing">if</span>-Schl&uuml;sselwortes wahr (true) ist, wird <span class="listing">Anweisung1</span> im Anweisungsblock ausgef&uuml;hrt. Anschlie&szlig;end wird das Programm bei <span class="listing">Anweisung2</span>, also nach dem Anweisungsblock, fortgesetzt. Ist die Bedingung unwahr (false), wird <span class="listing">Anweisung1</span> nicht ausgef&uuml;hrt, und das Programm f&auml;hrt sofort mit <span class="listing">Anweisung2</span> fort.</p>
<a name="t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang" title="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t32"></a><h3 class="t3">10.1.1 Anweisungsbloc<a id="Xxx999340" name="Xxx999340"></a>k<a id="RxxobKap010000040026E41F029196" name="RxxobKap010000040026E41F029196"></a> 
      <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><a href="#t2t31"><img src="common/top.gif" width="15" height="15" border="0" alt="top"></a></h3>
<p>In einem Anweisungsblock werden Anweisungen (mindestens eine) zusammengefasst. Als Anweisungsblock gelten alle Anweisungen, die zwischen geschweiften Klammern (<span class="listing">{}</span>) stehen. Anweisungsbl&ouml;cke lassen sich auch ineinander verschachteln. Es empfiehlt sich daher, auf eine saubere Strukturierung (d.h. entsprechendes Einr&uuml;cken bei den Anweisungen eines Blocks) beim Erstellen eines Programms zu achten, um den &Uuml;berblick zu bewahren.</p>
<p>Den Programmablauf der <span class="listing">if</span>-Bedingung k&ouml;nnen Sie sich schematisch folgenderma&szlig;en vorstellen (die Darstellung wird auch als Programmablaufplan bezeichnet):</p>
<p><a name="bild"></a><a href="#bild" onClick="OpenWin('bilder/10_01.gif','Abbildung',600,600)"><img border="0" src="bilderklein/klein10_01.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu Vergr&ouml;&szlig;ern</span></a></p>
<p class="tabunter"><b>Abbildung 10.1   
    </b>Programmablaufplan zur if-Anweisung</p>
<p>Sehen Sie sich dazu das folgende Programmbeispiel an:</p>
<pre>/* if1.c */
#include &lt;stdio.h&gt;
int main(void) {
   unsigned int alter;
   printf("Wie alt sind Sie: ");
   scanf("%d", &amp;alter);
   /* ... noch j&uuml;nger als 18? */
   if(alter &lt; 18) {
      printf("Sie sind noch nicht vollj&auml;hrig\n");
   }
    printf("Bye\n");
    return 0;
}</pre>
<p>Das Programm fordert Sie auf, Ihr Alter einzugeben. In der Bedingung <span class="listing">if(zahl</span> <span class="listing">&lt;</span> <span class="listing">18)</span> wird &uuml;berpr&uuml;ft, ob Sie j&uuml;nger als 18 Jahre alt sind. Sind Sie j&uuml;nger, wird die <span class="listing">printf()</span>-Anweisung im Anweisungsblock mit entsprechender Ausgabe bearbeitet. Wurde aber ein Wert eingegeben, der gr&ouml;&szlig;er oder gleich 18 ist, wird nur die <span class="listing">printf()</span>-Anweisung hinter dem Anweisungsblock ausgef&uuml;hrt, die »Bye« ausgibt. Dieses Beispiel als Programmablaufplan:</p>
<p><a name="bild"></a><a href="#bild" onClick="OpenWin('bilder/10_02.gif','Abbildung',600,600)"><img border="0" src="bilderklein/klein10_02.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu Vergr&ouml;&szlig;ern</span></a></p>
<p class="tabunter"><b>Abbildung 10.2   
    </b>Programmablaufplan zum Listing</p>
<p>Jetzt soll das Programm um einige <span class="listing">if</span>-Bedingungen erweitert werden:</p>
<pre>/* if2.c */
#include &lt;stdio.h&gt;
int main(void) {
   unsigned int alter;
   printf("Wie alt sind Sie: ");
   scanf("%d", &amp;alter);
   if(alter &lt; 18)  {
      printf("Sie sind noch nicht vollj&auml;hrig\n");
   }
   if(alter &gt; 18)  {
      printf("Sie sind vollj&auml;hrig\n");
   }
   if(alter == 18) {
      printf("Den F&uuml;hrerschein schon bestanden?\n");
   }
   printf("Bye\n");
   return 0;
}</pre>
<p>Es ist offensichtlich, wie das Programm vorgeht: Sie geben das Alter ein und mithilfe der einzelnen <span class="listing">if</span>-Bedingungen testet es, ob die eingegebene Zahl gr&ouml;&szlig;er, kleiner oder gleich 18 ist. Bevor das Programm etwas genauer analysiert wird, sollten Sie sich eine Tabelle mit den bisher verwendeten Vergleichsoperatoren<a id="Xxx999360" name="Xxx999360"></a> und ihrer jeweiligen Bedeutung ansehen.</p>
<br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter">
<p><span class="tabunter"><b>Tabelle 10.1   
    </b>&Uuml;bersicht zu Vergleichsoperatoren (Relationale Operatoren)</span></p>
</caption>
<tr>
<td class="tabellenkopf" bgcolor="#000000"><b>Vergleichsoperator</b>
</td>
<td class="tabellenkopf" bgcolor="#000000"><b>Bedeutung</b>
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">a &lt;<a id="Xxx999367" name="Xxx999367"></a> b
</td>
<td class="tabellentext" bgcolor="#000000">Wahr, wenn a kleiner als b
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">a &lt;=<a id="Xxx999372" name="Xxx999372"></a> b
</td>
<td class="tabellentext" bgcolor="#000000">Wahr, wenn a kleiner oder gleich b
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">a &gt;<a id="Xxx999377" name="Xxx999377"></a> b
</td>
<td class="tabellentext" bgcolor="#000000">Wahr, wenn a gr&ouml;&szlig;er als b
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">a &gt;=<a id="Xxx999382" name="Xxx999382"></a> b
</td>
<td class="tabellentext" bgcolor="#000000">Wahr, wenn a gr&ouml;&szlig;er oder gleich b
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">a ==<a id="Xxx999387" name="Xxx999387"></a> b
</td>
<td class="tabellentext" bgcolor="#000000">Wahr, wenn a gleich b
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">a !=<a id="Xxx999392" name="Xxx999392"></a> b
</td>
<td class="tabellentext" bgcolor="#000000">Wahr, wenn a ungleich b
</td>
</tr>
</table><br>
<p>Zur&uuml;ck zum Programm. Die erste Anweisung</p>
<pre>if(alter &lt; 18)</pre>
<p>testet, ob die Zahl, die Sie eingegeben haben, kleiner als 18 ist. Ist die Bedingung wahr, springt das Programm unmittelbar in den f&uuml;r diese Bedingung geschriebenen Anweisungsblock, der in den geschweiften Klammern steht. Falls also die eingegebene Zahl kleiner als 18 ist, wird der Anweisungsblock</p>
<pre>      {
         printf("Sie sind noch nicht vollj&auml;hrig\n");
      }</pre>
<p>ausgef&uuml;hrt. Besteht der Anweisungsblock hinter der Kontrollstruktur lediglich aus einer einzigen Anweisung, so k&ouml;nnen die geschweiften Klammern auch weggelassen werden:</p>
<pre>if(alter &lt; 18)
   printf("Sie sind noch nicht vollj&auml;hrig\n");</pre>
<p>Diese Schreibweise ist korrekt und wird auch h&auml;ufig verwendet. Sie sollten sich jedoch klar machen, dass sie sehr leicht zur Fehlerquelle werden kann. N&auml;mlich dann, wenn Sie eine weitere Anweisung hinzuf&uuml;gen wollen, die auch nur in dem Fall ausgef&uuml;hrt werden soll, wenn die <span class="listing">if</span>-Bedingung wahr ist, wie etwa im folgenden Beispiel:</p>
<pre>if(alter &lt; 18)
   printf("Sie sind noch nicht vollj&auml;hrig\n");
   printf("Sollte nur erscheinen, wenn (alter &lt; 18)!\n");</pre>
<p>Wenn – wie hier – dann die geschweiften Klammern vergessen werden, wird die zweite <span class="listing">printf()</span>-Anweisung immer ausgef&uuml;hrt, da die <span class="listing">if</span>-Bedingung im Wahr-Fall wirklich nur eine weitere Anweisung ausf&uuml;hrt.</p>
<p>Korrekt m&uuml;sste es folgenderma&szlig;en aussehen:</p>
<pre>if(alter &lt; 18) {
   printf("Sie sind noch nicht vollj&auml;hrig\n");
   printf("Sollte nur erscheinen, wenn (alter &lt; 18)!\n");
}</pre>
<p>Jetzt wird auch die zweite Anweisung nur ausgef&uuml;hrt, wenn die <span class="listing">if</span>-Bedingung wahr ist.</p>
<p>Die n&auml;chsten beiden <span class="listing">if</span>-Bedingungen verhalten sich analog. Hiermit wird getestet, ob die eingegebene Zahl f&uuml;r das Alter kleiner bzw. gleich 18 ist. Sollte sich einer dieser F&auml;lle als wahr herausstellen, so wird ebenfalls der jeweils zugeh&ouml;rige Anweisungsblock ausgef&uuml;hrt.</p>
<br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext" bgcolor="#000000">
<p class="BStandard"><b>Achtung   </b>Ein h&auml;ufig gemachter Fehler ist <span class="listing">if(alter=18)</span>. Hier wurde der Variablen <span class="listing">alter</span> der Wert 18 zugewiesen, und der Anweisungsblock wird ausgef&uuml;hrt. Dabei ist es jedoch egal, ob der Wert gleich 18 ist, denn <span class="listing">alter</span> wird jetzt der Wert 18 zugewiesen. Diese <span class="listing">if</span>-Abfrage ist also immer wahr. Der Fehler ist zudem schwer auffindbar, da die Syntax absolut korrekt ist, der Compiler also keine Fehlermeldung anzeigt. Oft verwendete und empfohlene Ma&szlig;nahme ist es, die &Uuml;berpr&uuml;fung umzustellen: <span class="listing">if</span> <span class="listing">(18</span> <span class="listing">==</span> <span class="listing">alter)</span> ist syntaktisch korrekt und bewirkt das Gleiche. Hiermit w&uuml;rde der Compiler sofort eine Fehlermeldung anzeigen, falls Sie versehentlich <span class="listing">if</span> <span class="listing">(18</span> <span class="listing">=</span> <span class="listing">alter)</span> schreiben, da sich einer Zahl keine Variable zuordnen l&auml;sst. Diese Umstellungsmethode funktioniert nur bei <span class="listing">==</span>-Vergleichen, nicht bei den anderen Operatoren.</p>
</td>
</tr>
</table><br>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a class="navnav" href="c_009_000.htm"> &lt;&lt; zur&uuml;ck</a></td>
<td width="49%">
<div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div>
</td>
<td align="right" width="25%">
<div align="right"><a class="navnav" href="c_010_001.htm">vor &gt;&gt; </a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</td>
<td width="10" valign="top">&nbsp;&nbsp;</td>
<td width="160" valign="top">
    <table border="0" cellpadding="0" cellspacing="0" width="160">
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2">
                            &nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opc" class="navs">
                            <strong>Zum Katalog</strong></a>
                        </td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2">
                            <img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td><a href="http://www.galileocomputing.de/899?GPP=opc">
                                        <img src="common/643_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C von A bis Z" title="Zum Katalog: C von A bis Z">
                                        <br /><strong>C von A bis Z</strong><br /><img src="common/pfeil_rechts5.gif" border="0" alt="">bestellen</a>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2"><strong>&nbsp;Ihre Meinung?</strong></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br /><a href="mailto:stefan.krumbiegel@galileo-press.de?subject=Meinung%20zu%20C%20von%20A%20bis%20Z%20(openbook)"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
                                    <br /><br /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opc" class="navs"><strong>Buchtipps</strong></a></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1007?GPP=opc">
                        <img src="common/683_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Shell-Programmierung" title="Zum Katalog: Shell-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Shell-Programmierung</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1137?GPP=opc">
                        <img src="common/749_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux-UNIX-Programmierung" title="Zum Katalog: Linux-UNIX-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux-UNIX-Programmierung</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1004?GPP=opc">
                        <img src="common/644_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C/C++" title="Zum Katalog: C/C++"><br /><br /><br /><br /><br /><br /><br />&nbsp;C/C++</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/880?GPP=opc">
                        <img src="common/573_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: UML 2.0" title="Zum Katalog: UML 2.0"><br /><br /><br /><br /><br /><br /><br />&nbsp;UML 2.0</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/967?GPP=opc">
                        <img src="common/626_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Reguläre Ausdrücke" title="Zum Katalog: Reguläre Ausdrücke"><br /><br /><br /><br /><br /><br /><br />&nbsp;Reguläre Ausdrücke</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/941?GPP=opc">
                        <img src="common/677_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux" title="Zum Katalog: Linux"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux</a><br /><br /></td>
                    </tr>
                </table></td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2"><strong>&nbsp;Shopping</strong></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br /><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=opc"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br /><br /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
</td>
</tr>
</table>
<br /><br />
<hr width="70%" align="center"><br />
<div align="center">
<p class="standard"><b>Copyright © Galileo Press 2006</b><br>F&uuml;r Ihren privaten Gebrauch d&uuml;rfen Sie die Online-Version nat&uuml;rlich ausdrucken. Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die gebundene Ausgabe: Das Werk einschlie&szlig;lich aller seiner Teile ist urheberrechtlich gesch&uuml;tzt. Alle Rechte vorbehalten einschlie&szlig;lich der Vervielf&auml;ltigung, &Uuml;bersetzung, Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>
</html>
