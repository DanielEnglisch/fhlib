<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: C von A bis Z – 17.7 Strukturen in Strukturen (Nested Structures)</title>
<meta name="title" content="Galileo Computing :: C von A bis Z">
<meta name="author" content="J&uuml;rgen Wolf">
<meta name="publisher" content="Galileo Press 2006">
<meta name="copyright" content="Galileo Press 2006">
<meta name="description" content="C von A bis Z - Das umfassende Handbuch f&uuml;r Linux, Unix und Windows – 2., aktualisierte und erweiterte Auflage 2006, geb., mit CD und Referenzkarte – ISBN 3-89842-643-2">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href="c_017_005.htm">
<link rel="next" href="c_017_007.htm"><script type="text/javascript" language="JavaScript"><!--
function OpenWin(url,name,height,width)
{
  var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
  InfoWin.focus();
}
//--></script></head>
<body vlink="#000099" link="#000099" alink="#000099">
    <table width="100%" height="74" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
        <tr>
            <td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook/?GPP=opc"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
            <td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=opc"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle B&uuml;cher. Auch f&uuml;r Einsteiger." title="Galileo Computing - Professionelle B&uuml;cher. Auch f&uuml;r Einsteiger."></a></td>
        </tr>
    </table>
    <div align="right"><a href="http://www.galileocomputing.de/?GPP=opc" class="navnav">Professionelle B&uuml;cher. Auch f&uuml;r Einsteiger.</a></div>
    <br />
<table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td width="156" valign="top">
    <table border="0" cellpadding="0" cellspacing="0" width="100%" align="left">
        <tr>
            <td colspan="2" class="nav1" align="left" valign="top" height="150">
                <table class="tbl1" width="150" border="0" cellpadding="3" cellspacing="0">
<tr>
<td class="tbl2" height="25"><a class="nav" href="./index.htm">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="./c_000Vorwort_000.htm#Xxx999266">Vorwort</a></td>
</tr>
<tr>
<td><a class="navnav" href="./c_000VorwortGutachter_000.htm#Xxx999275">Vorwort des Gutachters</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_001_000.htm#Xxx999328">1 Einstieg in C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_002_000.htm#Xxx999328">2 Das erste Programm</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_003_000.htm#Xxx999328">3 Zeichens&auml;tze</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_004_000.htm#Xxx999329">4 Kommentare in C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_005_000.htm#Xxx999330">5 Formatierte Eingabe mit scanf()</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_006_000.htm#Xxx999330">6 Formatierte Ausgabe mit printf</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_007_000.htm#Xxx999329">7 Elementare Datentypen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_008_000.htm#Xxx999328">8 Operatoren</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_009_000.htm#Xxx999328">9 Typenumwandlung</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_010_000.htm#Xxx999328">10 Kontrollstrukturen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_011_000.htm#Xxx999328">11 Funktionen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_012_000.htm#Xxx999328">12 Pr&auml;prozessor-Direktiven</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_013_000.htm#Xxx999328">13 Arrays</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_014_000.htm#Xxx999328">14 Zeiger (Pointer)</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_015_000.htm#Xxx999328">15 Kommandozeilenargumente</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_016_000.htm#Xxx999328">16 Dynamische Speicherverwaltung</A></td>
</tr>
<tr>
<td><A class="navh" href="./c_017_000.htm#Xxx999328">17 Strukturen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_018_000.htm#Xxx999328">18 Ein-/Ausgabe-Funktionen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_019_000.htm#Xxx999328">19 Attribute von Dateien und Arbeiten mit Verzeichnissen (nicht ANSI C)</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_020_000.htm#Xxx999328">20 Arbeiten mit variablen langen Argumentlisten – &lt;stdarg.h&gt;</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_021_000.htm#Xxx999328">21 Zeitroutinen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_022_000.htm#Xxx999328">22 Weitere Headerdateien und ihre Funktionen (ANSI C)</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_023_000.htm#Xxx999328">23 Dynamische Datenstrukturen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_024_000.htm#Xxx999328">24 Algorithmen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_025_000.htm#Xxx999328">25 Sicheres Programmieren</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_026_000.htm#Xxx999328">26 CGI mit C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_027_000.htm#Xxx999328">27 MySQL und C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_028_000.htm#Xxx999328">28 Netzwerkprogrammierung und Cross-Plattform-Entwicklung</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_029_000.htm#Xxx999328">29 Wie geht’s jetzt weiter?</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_030Anhang_000.htm#Xxx999266">A Anhang</A></td>
</tr>
<tr>
<td><a class="navnav" href="./stichwort.htm#Xxx512322">Index</a></td>
</tr>
<tr><td><br /><a class="navnav" href="http://download.galileo-press.de/openbook/c_von_a_bis_z/galileocomputing_c_von_a_bis_z.zip"><strong>Download:</strong><br />- ZIP, ca. 8,5 MB</a></td></tr>
<tr><td><a class="navnav" href="http://www.galileocomputing.de/899?GPP=opc">Buch bestellen</a></td></tr>
<tr><td><a class="navnav" href="mailto:stefan.krumbiegel@galileo-press.de?subject=Meinung%20zu%20C%20von%20A%20bis%20Z%20(openbook)">Ihre Meinung?</a><br /><br /></td></tr>
</table></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10"></td>
<td width="85%" valign="top" align="center">
    <div align="center">
        <table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
            <tr>
                <td width="100%" class="start" colspan="1" height="22" align="center">
                    <table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a class="navnav" href="c_017_005.htm"> &lt;&lt; zur&uuml;ck</a></td>
<td width="49%">
<div align="center"><a href="http://www.galileocomputing.de/?GPP=opc" class="navnav">Galileo Computing /</a><a class="navnav" href="http://www.galileocomputing.de/katalog/openbook/?GPP=opc"> &lt;openbook&gt; /</a><a href="./index.htm" class="navnav"> C von A bis Z</a></div>
</td>
<td align="right" width="25%">
<div align="right"><a class="navnav" href="c_017_007.htm">vor &gt;&gt; </a></div>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td width="100%" valign="top">
    <table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
        <tr>
            <td colspan="2"><a href="http://www.galileocomputing.de/899?GPP=opc" class="buchtitel">C von A bis Z</a><span class="autor"> von J&uuml;rgen Wolf</span><br><span class="untertitel">Das umfassende Handbuch f&uuml;r Linux, Unix und Windows <br />– 2., aktualisierte und erweiterte Auflage 2006</span></td>
        </tr>
        <tr>
            <td valign="top" width="90"><a href="http://www.galileocomputing.de/899?GPP=opc"><img src="common/643.gif" border="0" alt="Buch: C von A bis Z" title="Buch: C von A bis Z" align="left"><br /><br /><span class="autor"><strong>C von A bis Z</strong><br />1.116 S., mit CD, Referenzkarte, 39,90 Euro<br />Galileo Computing<br />ISBN 3-89842-643-2</span></a></a></td>
            <td width="80%">
<table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="3" class="kap"><b>Kapitel <a href="./c_017_000.htm#RxxobKap0170000400298D1F02D18C">17 Strukturen</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_000.htm#RxxobKap0170000400298D1F02D18E">17.1 Struktur deklarieren</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_001.htm#RxxobKap017001040029A81F03518C">17.2 Initialisierung und Zugriff auf Strukturen</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_002.htm#RxxobKap017002040029A91F02418C">17.3 Strukturen als Wert&uuml;bergabe an eine Funktion</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_003.htm#RxxobKap017003040029AA1F04418C">17.4 Strukturen als R&uuml;ckgabewert einer Funktion</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_004.htm#RxxobKap017004040029AB1F01F18C">17.5 Strukturen vergleichen</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_005.htm#RxxobKap017005040029AC1F03F18C">17.6 Arrays von Strukturen</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a class="navh" href="#RxxobKap017006040029AD1F01718C">17.7 Strukturen in Strukturen (Nested Structures)</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_007.htm#RxxobKap017007040029AE1F04318C">17.8 Kurze Zusammenfassung zu den Strukturen</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_008.htm#RxxobKap017008040029AF1F02818C">17.9 Union</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_009.htm#RxxobKap017009040029B01F01518C">17.10 Aufz&auml;hlungstyp enum</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_010.htm#RxxobKap017010040029B11F02218C">17.11 Typendefinition mit typedef</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_011.htm#RxxobKap017011040029B21F01F18C">17.12 Attribute von Strukturen ver&auml;ndern (nicht ANSI C)</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_012.htm#RxxobKap017012040029B31F02818C">17.13 Bitfelder</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_017_013.htm#RxxobKap017013040029B41F01218C">17.14 Das offsetof-Makro</a></b></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td>
<a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang" title="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2">17.7 Strukturen in Strukturen (Nested Structures)<a id="RxxobKap017006040029AD1F01718C" name="RxxobKap017006040029AD1F01718C"></a> 
      <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"></h2>
<p><a id="Xxx999329" name="Xxx999329"></a>Neben der Kombination von Arrays und Strukturen k&ouml;nnen auch Strukturen innerhalb von Strukturen verwendet werden. Ein einfaches Beispiel sind Uhrzeit und Datum:</p>
<pre>struct uhrzeit {
   unsigned int stunde;
   unsigned int minute;
   unsigned int sekunde;
};
struct datum {
   unsigned int tag;
   unsigned int monat;
   int jahr;
};
struct termin {
   struct datum d;
   struct uhrzeit z;
} t;</pre>
<p><a name="bild"></a><a href="#bild" onClick="OpenWin('bilder/17_05.gif','Abbildung',600,600)"><img border="0" src="bilderklein/klein17_05.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu Vergr&ouml;&szlig;ern</span></a></p>
<p class="tabunter"><b>Abbildung 17.5   
    </b>Strukturen in Strukturen</p>
<p>Anhand der Abbildung 17.5 l&auml;sst sich deutlich erkennen, was Strukturen in Strukturen bedeuten. Es wird dabei auch von »Nested Structures« gesprochen.</p>
<p>Der Zugriff auf die einzelnen Strukturen ist ein wenig aufw&auml;ndiger. Hier ein Programmbeispiel, wie auf die einzelnen Elemente und die gesamte Struktur zugegriffen werden kann:</p>
<pre>/* nested_struct1.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
struct uhrzeit {
   unsigned int stunde;
   unsigned int minute;
   unsigned int sekunde;
};
struct datum {
   unsigned int tag;
   unsigned int monat;
   int jahr;
};
struct termin {
   struct datum d;
   struct uhrzeit z;
} t;
int main(void) {
   /* Termin am 19.12.2004 um 20:15 Uhr */
   struct termin t = { {19, 12, 2004}, {20, 15, 0} };
   printf("Termin am ");
   printf("%u.%u.%d um ", t.d.tag, t.d.monat, t.d.jahr);
   printf("%u.%u.%u0 Uhr \n\n",
      t.z.stunde, t.z.minute, t.z.sekunde);
   printf("Neuen Termin eingeben !!\n\n");
   printf("Tag.............: ");
   scanf("%u",&amp;t.d.tag);
   printf("Monat...........: ");
   scanf("%u",&amp;t.d.monat);
   printf("Jahr............: ");
   scanf("%d",&amp;t.d.jahr);
   printf("\n");
   printf("Stunde..........: ");
   scanf("%u",&amp;t.z.stunde);
   printf("Minuten.........: ");
   scanf("%u",&amp;t.z.minute);
   printf("Sekunden........: ");
   scanf("%u",&amp;t.z.sekunde);
   printf("\n");
   printf("Neuer Termin am ");
   printf("%02u.%02u.%04d um ",t.d.tag, t.d.monat, t.d.jahr);
   printf("%02u.%02u.%02u Uhr \n",
      t.z.stunde, t.z.minute, t.z.sekunde);
   return EXIT_SUCCESS;
}</pre>
<p>Dieser geringe Mehraufwand stellt eher eine Erleichterung dar. Zuerst werden in diesem Programm zur Demonstration die Werte direkt &uuml;bergeben:</p>
<pre>struct termin t = {{19,12,2004},{20,15,0}};
/* struct termin t = {{struct datum}{struct uhrzeit}} */</pre>
<p>Danach werden die Werte &uuml;ber die Tastatur eingelesen, z.B. die Minuten:</p>
<pre>scanf("%u", &amp;t.z.minute);</pre>
<p>Das Listing wird kaum jemanden &uuml;berfordern. Daher soll das Programm zur Adressverwaltung mit dem eben gezeigten Programm verbunden werden. Damit h&auml;tte die Struktur <span class="listing">termin</span> folgendes Aussehen:</p>
<pre>struct termin {
   struct datum d;
   struct uhrzeit z;
   struct adressen a;
} t[20];</pre>
<p><a name="bild"></a><a href="#bild" onClick="OpenWin('bilder/17_06.gif','Abbildung',600,600)"><img border="0" src="bilderklein/klein17_06.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu Vergr&ouml;&szlig;ern</span></a></p>
<p class="tabunter"><b>Abbildung 17.6   
    </b>Eine weitere Struktur wurde zur Struktur hinzugef&uuml;gt</p>
<p>So k&ouml;nnen Sie 20 Termine mit Datum, Uhrzeit und der Adresse verwalten. Hierzu das vollst&auml;ndige Listing:</p>
<pre>/* nested_struct2.c */
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;
#define MAX 30
/* Z&auml;hler Termine */
static int dates = 0;
/* Z&auml;hler Adressen */
static int nr = 0;
struct uhrzeit {
                 unsigned int stunde;
                 unsigned int minute;
                 unsigned int sekunde;
               };
struct datum {
   unsigned int tag;
   unsigned int monat;
   int jahr;
};
struct adressen {
   char vname[MAX];
   char nname[MAX];
   long PLZ;
   char ort[MAX];
   int geburtsjahr;
} xyz[100];
struct termin {
   struct datum d;
   struct uhrzeit z;
   struct adressen a;
} t[20];
/* Funktionsprototypen */
void newdate(struct termin *);
int suche(char *);
void listdate(struct termin *,int);
void replacedate(struct termin *,int);
void sortdate(struct termin *,int);
void Eingabe(struct adressen *);
void Ausgabe(struct adressen *);
void Sortadress(struct adressen *);
void newdate(struct termin *t) {
   int auswahl,ret;
   char such_name[MAX];
   printf("Tag.......: ");
   scanf("%u",&amp;t[dates].d.tag);
   printf("Monat.....: ");
   scanf("%u",&amp;t[dates].d.monat);
   printf("Jahr......: ");
   scanf("%d",&amp;t[dates].d.jahr);
   printf("---------------------\n");
   printf("Stunde....: ");
   scanf("%u",&amp;t[dates].z.stunde);
   printf("Minute(n).: ");
   scanf("%u",&amp;t[dates].z.minute);
   printf("---------------------\n");
   printf("\nTermin mit :\n –1- Neuer Adresse\n");
   printf(" –2- Vorhandener Adresse\n");
   printf("Ihre Auswahl : ");
   do {
      scanf("%d",&amp;auswahl);
   } while(getchar()!= '\n');
   if(auswahl == 1) {
      printf("Vorname.....: ");
      fgets(t[dates].a.vname, MAX, stdin);
      printf("Nachname....: ");
      fgets(t[dates].a.nname, MAX, stdin);
      printf("Postleitzahl: ");
      do {
         scanf("%ld",&amp;t[dates].a.PLZ);
      } while(getchar()!= '\n');
      printf("ORT.........: ");
      fgets(t[dates].a.ort, MAX, stdin);
      printf("Geburtsjahr..: ");
      do {
         scanf("%ld",&amp;t[dates].a.geburtsjahr);
      } while(getchar()!= '\n');
      /* Neue Adresse kommt auch zum neuen Adresssatz */
      strcpy(xyz[nr].vname, strtok(t[dates].a.vname, "\n"));
      strcpy(xyz[nr].nname, strtok(t[dates].a.nname, "\n"));
      xyz[nr].PLZ = t[dates].a.PLZ;
      strcpy(xyz[nr].ort, t[dates].a.ort);
      xyz[nr].geburtsjahr=t[dates].a.geburtsjahr;
      dates++;
      nr++;
   }
   else {
      printf("Bitte geben Sie den Nachnamen ein : ");
      fgets(such_name, MAX, stdin);
      ret = suche(strtok(such_name,"\n"));
      if( ret == –1 ) {
         printf("Kein Eintrag vorhanden : %s ???", such_name);
         return;
      }
      strcpy(t[dates].a.vname,xyz[ret].vname);
      strcpy(t[dates].a.nname,xyz[ret].nname);
      t[dates].a.PLZ=xyz[ret].PLZ;
      strcpy(t[dates].a.ort,xyz[ret].ort);
      t[dates].a.geburtsjahr=xyz[ret].geburtsjahr;
      dates++;
   }
}
int suche(char *suchname) {
   int pos, found = 0;
   for(pos = 0; pos &lt;= nr; pos++) {
      if(strcmp(xyz[pos].nname,suchname) == 0) {
         found = 1;
         break;
      }
   }
   if(found)
      return pos;
   else
      return –1;
}
void listdate(struct termin *list, int dates) {
   int i;
   for(i = 0; i &lt; dates; i++) {
      printf("Nr. %d: ", i+1);
      printf("Termin am %02u.%02u.%04d ",
         list[i].d.tag, list[i].d.monat, list[i].d.jahr);
      printf("um %02u.%02u Uhr\n",
         list[i].z.stunde, list[i].z.minute);
      printf("mit %s %s\n\n", list[i].a.vname, list[i].a.nname);
      }
}
void replacedate(struct termin *aendern, int nt) {
    if(nt &lt;= dates &amp;&amp; nt &lt; 20) {
        printf("Bitte neue Terminzeit eingeben!!\n");
        printf("Tag..........: ");
        scanf("%u",&amp;aendern[nt].d.tag);
        printf("Monat........: ");
        scanf("%u",&amp;aendern[nt].d.monat);
        printf("Jahr.........: ");
        scanf("%d",&amp;aendern[nt].d.jahr);
        printf("------------------------\n");
        printf("Stunden......: ");
        scanf("%u",&amp;aendern[nt].z.stunde);
        printf("Minuten......: ");
        scanf("%u",&amp;aendern[nt].z.minute);
      }
    else
       printf("Falsche Eingabe : %d\n", nt);
}
void sortdate(struct termin *sort, int dates) {
   struct termin *temp;
   int i,j;
   temp = (struct termin *)malloc(sizeof(struct termin *));
   if(NULL == temp) {
      printf("Konnte keinen Speicher reservieren ...\n");
      return;
   }
   for(i = 0; i &lt; dates; i++) {
      for(j = i + 1; j &lt; dates; j++) {
         if(sort[i].d.jahr &gt; sort[j].d.jahr) {
            *temp=sort[j];
            sort[j]=sort[i];
            sort[i]=*temp;
         }
      }
   }
   printf("... sortiert!!\n");
}
void Eingabe(struct adressen *neu) {
   unsigned int size;
   printf("Vorname : ");
   fgets(neu[nr].vname, MAX, stdin);
   /* newline-Zeichen entfernen */
   size = strlen(neu[nr].vname);
   neu[nr].vname[size-1] = '\0';
   printf("Nachname : ");
   fgets(neu[nr].nname, MAX, stdin);
   /* newline-Zeichen entfernen */
   size = strlen(neu[nr].nname);
   neu[nr].nname[size-1] = '\0';
   printf("Postleitzahl: ");
   do {
      scanf("%ld",&amp;neu[nr].PLZ);
   } while(getchar()!= '\n');
   printf("Wohnort : ");
   fgets(neu[nr].ort, MAX, stdin);
   printf("Geburtsjahr : ");
   do {
      scanf("%d",&amp;neu[nr].geburtsjahr);
   } while(getchar()!= '\n');
   nr++;
}
void Ausgabe(struct adressen *all) {
   int i;
   for(i = 0; i &lt; nr; i++) {
      printf("Vorname.........:%s\n", all[i].vname);
      printf("Nachname........:%s\n", all[i].nname);
      printf("Postleitzahl....:%ld\n", all[i].PLZ);
      printf("Ort.............:%s", all[i].ort);
      printf("Geburtsjahr.....:%d\n\n", all[i].geburtsjahr);
      if( (!(i%2)) &amp;&amp; i!=0) {
         // fflush(stdin);
         printf("\n\tWeiter mit &lt;Enter&gt;\n\n");
         getchar();
      }
   }
}
void Sortadress(struct adressen *sort) {
   struct adressen *temp;
   int i,j;
   temp = (struct adressen *)malloc(sizeof(struct adressen *));
   if(NULL == temp) {
      printf("Konnte keinen Speicher reservieren ...\n");
      return;
   }
   for(i = 0; i &lt; nr; i++) {
      for(j = i + 1; j &lt; nr; j++) {
         if(strcmp(sort[i].nname, sort[j].nname)&gt;0) {
            *temp=sort[j];
            sort[j]=sort[i];
            sort[i]=*temp;
         }
      }
   }
   printf("... sortiert!!\n");
}
int main(void) {
   int eingabe,aendern;
   do {
      printf("\tTerminverwaltung\n");
      printf("\t----------------\n\n");
      printf("\t-1- Neuer Termin\n");
      printf("\t-2- Termine auflisten\n");
      printf("\t-3- Termin &auml;ndern\n");
      printf("\t-4- Termine sortieren\n");
      printf("\t-5- Neue Adresse eingeben\n");
      printf("\t-6- Adressen ausgeben\n");
      printf("\t-7- Adressen sortieren\n");
      printf("\t-8- Programm beenden\n");
      printf("\n\tIhre Auswahl : ");
      scanf("%d",&amp;eingabe);
      /* fflush(stdin); */
      getchar();
      switch(eingabe) {
         case 1  : newdate(t);            break;
         case 2  : listdate(t,dates);     break;
         case 3  : listdate(t,dates);
                  printf("Welchen Termin &auml;ndern(Nr.?):");
                  scanf("%d",&amp;aendern);
                  replacedate(t,--aendern);
                  break;
         case 4  : sortdate(t,dates);     break;
         case 5  : Eingabe(xyz);          break;
         case 6  : Ausgabe(xyz);          break;
         case 7  : Sortadress(xyz);       break;
         default : break;
      }
   } while(eingabe &lt; 8);
   printf("Bye\n");
   return EXIT_SUCCESS;
}</pre>
<p>Eine kurze Erkl&auml;rung: Bei der ersten Funktion <span class="listing">newdate()</span> wird zuerst der neue Termin eingegeben. Anschlie&szlig;end wird erfragt, ob ein neuer Adresseintrag f&uuml;r den Termin vorgenommen werden soll oder ob ein bereits vorhandener Adresssatz verwendet wird. Die n&auml;chste Funktion <span class="listing">listdate()</span> ist bereits bekannt aus einem anderen Programm. Mit der Funktion <span class="listing">replacedate()</span> kann ein Termin verschoben werden. Die Funktion <span class="listing">sortdate()</span> wurde ebenfalls schon &auml;hnlich verwendet. Hier wurde nur nach Jahresdatum sortiert. Als &Uuml;bung kann dies ja bis auf die Minute genau umgeschrieben werden. Der Rest des Programms wurde zum Teil schon bei der Adressverwaltung erkl&auml;rt. Die Suchfunktion wurde dabei ver&auml;ndert. Diese sucht jetzt nach einem ganzen Nachnamen, nicht mehr nur nach dem Anfangsbuchstaben. Dem Programm fehlen noch eine Menge Fehler&uuml;berpr&uuml;fungen bei der Eingabe, auf diese wurde aus Gr&uuml;nden der &Uuml;bersichtlichkeit verzichtet (Sie k&ouml;nnen sie zur &Uuml;bung ja selbst schreiben).</p>
<p><a name="bild"></a><a href="#bild" onClick="OpenWin('bilder/17_07.gif','Abbildung',600,600)"><img border="0" src="bilderklein/klein17_07.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu Vergr&ouml;&szlig;ern</span></a></p>
<p class="tabunter"><b>Abbildung 17.7   
    </b>Terminverwaltungsprogramm w&auml;hrend der Ausf&uuml;hrung</p>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a class="navnav" href="c_017_005.htm"> &lt;&lt; zur&uuml;ck</a></td>
<td width="49%">
<div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div>
</td>
<td align="right" width="25%">
<div align="right"><a class="navnav" href="c_017_007.htm">vor &gt;&gt; </a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</td>
<td width="10" valign="top">&nbsp;&nbsp;</td>
<td width="160" valign="top">
    <table border="0" cellpadding="0" cellspacing="0" width="160">
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2">
                            &nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opc" class="navs">
                            <strong>Zum Katalog</strong></a>
                        </td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2">
                            <img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td><a href="http://www.galileocomputing.de/899?GPP=opc">
                                        <img src="common/643_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C von A bis Z" title="Zum Katalog: C von A bis Z">
                                        <br /><strong>C von A bis Z</strong><br /><img src="common/pfeil_rechts5.gif" border="0" alt="">bestellen</a>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2"><strong>&nbsp;Ihre Meinung?</strong></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br /><a href="mailto:stefan.krumbiegel@galileo-press.de?subject=Meinung%20zu%20C%20von%20A%20bis%20Z%20(openbook)"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
                                    <br /><br /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opc" class="navs"><strong>Buchtipps</strong></a></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1007?GPP=opc">
                        <img src="common/683_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Shell-Programmierung" title="Zum Katalog: Shell-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Shell-Programmierung</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1137?GPP=opc">
                        <img src="common/749_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux-UNIX-Programmierung" title="Zum Katalog: Linux-UNIX-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux-UNIX-Programmierung</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1004?GPP=opc">
                        <img src="common/644_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C/C++" title="Zum Katalog: C/C++"><br /><br /><br /><br /><br /><br /><br />&nbsp;C/C++</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/880?GPP=opc">
                        <img src="common/573_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: UML 2.0" title="Zum Katalog: UML 2.0"><br /><br /><br /><br /><br /><br /><br />&nbsp;UML 2.0</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/967?GPP=opc">
                        <img src="common/626_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Reguläre Ausdrücke" title="Zum Katalog: Reguläre Ausdrücke"><br /><br /><br /><br /><br /><br /><br />&nbsp;Reguläre Ausdrücke</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/941?GPP=opc">
                        <img src="common/677_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux" title="Zum Katalog: Linux"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux</a><br /><br /></td>
                    </tr>
                </table></td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2"><strong>&nbsp;Shopping</strong></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br /><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=opc"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br /><br /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
</td>
</tr>
</table>
<br /><br />
<hr width="70%" align="center"><br />
<div align="center">
<p class="standard"><b>Copyright © Galileo Press 2006</b><br>F&uuml;r Ihren privaten Gebrauch d&uuml;rfen Sie die Online-Version nat&uuml;rlich ausdrucken. Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die gebundene Ausgabe: Das Werk einschlie&szlig;lich aller seiner Teile ist urheberrechtlich gesch&uuml;tzt. Alle Rechte vorbehalten einschlie&szlig;lich der Vervielf&auml;ltigung, &Uuml;bersetzung, Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>
</html>
