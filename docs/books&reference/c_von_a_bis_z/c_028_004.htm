<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: C von A bis Z – 28.5 Erstellen einer Server-Anwendung</title>
<meta name="title" content="Galileo Computing :: C von A bis Z">
<meta name="author" content="J&uuml;rgen Wolf">
<meta name="publisher" content="Galileo Press 2006">
<meta name="copyright" content="Galileo Press 2006">
<meta name="description" content="C von A bis Z - Das umfassende Handbuch f&uuml;r Linux, Unix und Windows – 2., aktualisierte und erweiterte Auflage 2006, geb., mit CD und Referenzkarte – ISBN 3-89842-643-2">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href="c_028_003.htm">
<link rel="next" href="c_028_005.htm"><script type="text/javascript" language="JavaScript"><!--
function OpenWin(url,name,height,width)
{
  var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
  InfoWin.focus();
}
//--></script></head>
<body vlink="#000099" link="#000099" alink="#000099">
    <table width="100%" height="74" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
        <tr>
            <td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook/?GPP=opc"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
            <td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=opc"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle B&uuml;cher. Auch f&uuml;r Einsteiger." title="Galileo Computing - Professionelle B&uuml;cher. Auch f&uuml;r Einsteiger."></a></td>
        </tr>
    </table>
    <div align="right"><a href="http://www.galileocomputing.de/?GPP=opc" class="navnav">Professionelle B&uuml;cher. Auch f&uuml;r Einsteiger.</a></div>
    <br />
<table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td width="156" valign="top">
    <table border="0" cellpadding="0" cellspacing="0" width="100%" align="left">
        <tr>
            <td colspan="2" class="nav1" align="left" valign="top" height="150">
                <table class="tbl1" width="150" border="0" cellpadding="3" cellspacing="0">
<tr>
<td class="tbl2" height="25"><a class="nav" href="./index.htm">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="./c_000Vorwort_000.htm#Xxx999266">Vorwort</a></td>
</tr>
<tr>
<td><a class="navnav" href="./c_000VorwortGutachter_000.htm#Xxx999275">Vorwort des Gutachters</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_001_000.htm#Xxx999328">1 Einstieg in C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_002_000.htm#Xxx999328">2 Das erste Programm</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_003_000.htm#Xxx999328">3 Zeichens&auml;tze</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_004_000.htm#Xxx999329">4 Kommentare in C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_005_000.htm#Xxx999330">5 Formatierte Eingabe mit scanf()</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_006_000.htm#Xxx999330">6 Formatierte Ausgabe mit printf</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_007_000.htm#Xxx999329">7 Elementare Datentypen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_008_000.htm#Xxx999328">8 Operatoren</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_009_000.htm#Xxx999328">9 Typenumwandlung</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_010_000.htm#Xxx999328">10 Kontrollstrukturen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_011_000.htm#Xxx999328">11 Funktionen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_012_000.htm#Xxx999328">12 Pr&auml;prozessor-Direktiven</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_013_000.htm#Xxx999328">13 Arrays</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_014_000.htm#Xxx999328">14 Zeiger (Pointer)</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_015_000.htm#Xxx999328">15 Kommandozeilenargumente</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_016_000.htm#Xxx999328">16 Dynamische Speicherverwaltung</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_017_000.htm#Xxx999328">17 Strukturen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_018_000.htm#Xxx999328">18 Ein-/Ausgabe-Funktionen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_019_000.htm#Xxx999328">19 Attribute von Dateien und Arbeiten mit Verzeichnissen (nicht ANSI C)</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_020_000.htm#Xxx999328">20 Arbeiten mit variablen langen Argumentlisten – &lt;stdarg.h&gt;</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_021_000.htm#Xxx999328">21 Zeitroutinen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_022_000.htm#Xxx999328">22 Weitere Headerdateien und ihre Funktionen (ANSI C)</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_023_000.htm#Xxx999328">23 Dynamische Datenstrukturen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_024_000.htm#Xxx999328">24 Algorithmen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_025_000.htm#Xxx999328">25 Sicheres Programmieren</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_026_000.htm#Xxx999328">26 CGI mit C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_027_000.htm#Xxx999328">27 MySQL und C</A></td>
</tr>
<tr>
<td><A class="navh" href="./c_028_000.htm#Xxx999328">28 Netzwerkprogrammierung und Cross-Plattform-Entwicklung</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_029_000.htm#Xxx999328">29 Wie geht’s jetzt weiter?</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_030Anhang_000.htm#Xxx999266">A Anhang</A></td>
</tr>
<tr>
<td><a class="navnav" href="./stichwort.htm#Xxx512322">Index</a></td>
</tr>
<tr><td><br /><a class="navnav" href="http://download.galileo-press.de/openbook/c_von_a_bis_z/galileocomputing_c_von_a_bis_z.zip"><strong>Download:</strong><br />- ZIP, ca. 8,5 MB</a></td></tr>
<tr><td><a class="navnav" href="http://www.galileocomputing.de/899?GPP=opc">Buch bestellen</a></td></tr>
<tr><td><a class="navnav" href="mailto:stefan.krumbiegel@galileo-press.de?subject=Meinung%20zu%20C%20von%20A%20bis%20Z%20(openbook)">Ihre Meinung?</a><br /><br /></td></tr>
</table></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10"></td>
<td width="85%" valign="top" align="center">
    <div align="center">
        <table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
            <tr>
                <td width="100%" class="start" colspan="1" height="22" align="center">
                    <table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a class="navnav" href="c_028_003.htm"> &lt;&lt; zur&uuml;ck</a></td>
<td width="49%">
<div align="center"><a href="http://www.galileocomputing.de/?GPP=opc" class="navnav">Galileo Computing /</a><a class="navnav" href="http://www.galileocomputing.de/katalog/openbook/?GPP=opc"> &lt;openbook&gt; /</a><a href="./index.htm" class="navnav"> C von A bis Z</a></div>
</td>
<td align="right" width="25%">
<div align="right"><a class="navnav" href="c_028_005.htm">vor &gt;&gt; </a></div>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td width="100%" valign="top">
    <table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
        <tr>
            <td colspan="2"><a href="http://www.galileocomputing.de/899?GPP=opc" class="buchtitel">C von A bis Z</a><span class="autor"> von J&uuml;rgen Wolf</span><br><span class="untertitel">Das umfassende Handbuch f&uuml;r Linux, Unix und Windows <br />– 2., aktualisierte und erweiterte Auflage 2006</span></td>
        </tr>
        <tr>
            <td valign="top" width="90"><a href="http://www.galileocomputing.de/899?GPP=opc"><img src="common/643.gif" border="0" alt="Buch: C von A bis Z" title="Buch: C von A bis Z" align="left"><br /><br /><span class="autor"><strong>C von A bis Z</strong><br />1.116 S., mit CD, Referenzkarte, 39,90 Euro<br />Galileo Computing<br />ISBN 3-89842-643-2</span></a></a></td>
            <td width="80%">
<table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="3" class="kap"><b>Kapitel <a href="./c_028_000.htm#RxxobKap02800004002D021F04318C">28 Netzwerkprogrammierung und Cross-Plattform-Entwicklung</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_028_000.htm#RxxobKap02800004002D021F043192">28.1 Begriffe zur Netzwerktechnik</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_000.htm#RxxobKap02800004002D021F043194">28.1.1 IP-Nummern</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_000.htm#RxxobKap02800004002D021F04319E">28.1.2 Portnummer</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_000.htm#RxxobKap02800004002D021F0431A2">28.1.3 Host- und Domainname</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_000.htm#RxxobKap02800004002D021F0431A6">28.1.4 Nameserver</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_000.htm#RxxobKap02800004002D021F0431A8">28.1.5 Das IP-Protokoll</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_000.htm#RxxobKap02800004002D021F0431AC">28.1.6 TCP und UDP</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_000.htm#RxxobKap02800004002D021F0431B2">28.1.7 Was sind Sockets?</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_028_001.htm#RxxobKap02800104002D1D1F01518C">28.2 Headerdateien zur Socketprogrammierung</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_001.htm#RxxobKap02800104002D1D1F01518E">28.2.1 Linux/UNIX</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_001.htm#RxxobKap02800104002D1D1F015193">28.2.2 Windows</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_028_002.htm#RxxobKap02800204002D1E1F02A18C">28.3 Client-/Server-Prinzip</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_002.htm#RxxobKap02800204002D1E1F02A190">28.3.1 Loopback-Interface</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_028_003.htm#RxxobKap02800304002D1F1F03918C">28.4 Erstellen einer Client-Anwendung</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_003.htm#RxxobKap02800304002D1F1F03918E">28.4.1 socket() – Erzeugen eines Kommunikationsendpunktes</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_003.htm#RxxobKap02800304002D1F1F0391AC">28.4.2 connect() – Client stellt Verbindung zum Server her</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_003.htm#RxxobKap02800304002D1F1F0391DA">28.4.3 Senden und Empfangen von Daten</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_003.htm#RxxobKap02800304002D1F1F0391F3">28.4.4 close(), closesocket()</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a class="navh" href="#RxxobKap02800404002D201F01818C">28.5 Erstellen einer Server-Anwendung</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a class="navh" href="#RxxobKap02800404002D201F01818E">28.5.1 bind() – Festlegen einer Adresse aus dem Namensraum</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a class="navh" href="#RxxobKap02800404002D201F018199">28.5.2 listen() – Warteschlange f&uuml;r eingehende Verbindungen einrichten</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a class="navh" href="#RxxobKap02800404002D201F0181A2">28.5.3 accept() und die Serverhauptschleife</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_028_005.htm#RxxobKap02800504002D211F04918C">28.6 (Cross-Plattform)TCP-Echo-Server</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_005.htm#RxxobKap02800504002D211F04918E">28.6.1 Der Client</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_005.htm#RxxobKap02800504002D211F049191">28.6.2 Der Server</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_028_006.htm#RxxobKap02800604002D221F02418C">28.7 Cross-Plattform-Development</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_006.htm#RxxobKap02800604002D221F02418E">28.7.1 Abstraktion Layer</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_006.htm#RxxobKap02800604002D221F024190">28.7.2 Headerdatei Linux/UNIX</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_006.htm#RxxobKap02800604002D221F024192">28.7.3 Linux/UNIX-Quelldatei</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_006.htm#RxxobKap02800604002D221F024196">28.7.4 Headerdatei MS-Windows</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_006.htm#RxxobKap02800604002D221F024198">28.7.5 Windows-Quelldatei</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_006.htm#RxxobKap02800604002D221F02419A">28.7.6 All together – die main-Funktionen</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_006.htm#RxxobKap02800604002D221F0241AE">28.7.7 Ein UDP-Beispiel</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_006.htm#RxxobKap02800604002D221F0241BA">28.7.8 Mehrere Clients gleichzeitig behandeln</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_028_007.htm#RxxobKap02800704002D231F02218C">28.8 Weitere Anmerkungen zur Netzwerkprogrammierung</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_007.htm#RxxobKap02800704002D231F02218E">28.8.1 Das Datenformat</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_007.htm#RxxobKap02800704002D231F022193">28.8.2 Der Puffer</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_007.htm#RxxobKap02800704002D231F022199">28.8.3 Portabilit&auml;t</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_007.htm#RxxobKap02800704002D231F02219B">28.8.4 Von IPv4 nach IPv6</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_007.htm#RxxobKap02800704002D231F0221AA">28.8.5 RFC-Dokumente (Request for Comments)</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_028_007.htm#RxxobKap02800704002D231F0221AC">28.8.6 Sicherheit</a></b></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td>
<a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang" title="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2">28.5 Erstellen einer Server-Anwendung<a id="RxxobKap02800404002D201F01818C" name="RxxobKap02800404002D201F01818C"></a> 
      <a href="#t2t32"><img src="common/down.gif" width="15" height="15" border="0" alt="down"></a><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"></h2>
<p><a id="Xxx999329" name="Xxx999329"></a>Die Erstellung der Server-Anwendung gestaltet sich nicht viel schwieriger, als die der Client-Anwendung. Der Datenaustausch erfolgt genauso wie bei der Client-Anwendung via <span class="listing">send()</span>/<span class="listing">recv()</span> (TCP) bzw. <span class="listing">sendto()</span>/<span class="listing">recvfrom()</span> (UDP). Der Server muss allerdings keine Verbindung herstellen – dies ist die Aufgabe vom Client. Allerdings ist es die Aufgabe des Servers, Verbindungsw&uuml;nsche anzunehmen. Und um dies zu realisieren, m&uuml;ssen Sie den Server in einen Wartezustand versetzen.</p>
<a name="t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang" title="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t32"></a><h3 class="t3">28.5.1 bind() – Festlegen einer Adresse aus dem Namensraum<a id="RxxobKap02800404002D201F01818E" name="RxxobKap02800404002D201F01818E"></a> 
      <a href="#t2t33"><img src="common/down.gif" width="15" height="15" border="0" alt="down"></a><a href="#t2t31"><img src="common/top.gif" width="15" height="15" border="0" alt="top"></a></h3>
<p><a id="Xxx999332" name="Xxx999332"></a><a id="Xxx999333" name="Xxx999333"></a><a id="Xxx999334" name="Xxx999334"></a>Nachdem Sie auch auf der Serverseite mit der Funktion <span class="listing">socket()</span> eine »Steckdose« bereitgestellt haben, m&uuml;ssen Sie zun&auml;chst die Portnummer der Server-Anwendung festlegen. Sie wissen ja bereits von der Clientanwendung, dass mittels <span class="listing">connect()</span> auf eine bestimmte IP-Adresse und eine Portnummer des Servers zugegriffen wird. Unter welcher IP-Adresse und Portnummer, der Server denn nun auf Anfragen der Clients wartet, m&uuml;ssen Sie mit der Funktion <span class="listing">bind()</span> festlegen. Somit weisen Sie praktisch einem Socket eine Adresse zu – schlie&szlig;lich ist es durchaus g&auml;ngig, dass eine Serveranwendung mehrere Sockets verwendet. Dass hierbei meistens die IP-Adresse die gleiche ist, d&uuml;rfte klar sein, aber es ist durchaus m&ouml;glich die Daten&uuml;bertragung &uuml;ber mehrere Ports zuzulassen. Die Funktion <span class="listing">bind()</span> wiederum teilt dem Betriebssystem mit, welchen Socket es mit einem bestimmten Port verkn&uuml;pfen soll. Sobald dann ein Datenpaket eingeht, erkennt das Betriebssystem anhand der Portnummer, f&uuml;r welchen Socket das Paket ist.</p>
<p>Hierzu die Syntax zur Funktion <span class="listing">bind()</span> bei Linux/UNIX:</p>
<pre>#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
int bind( int s, const struct sockaddr name, int namelen );</pre>
<p>Und die &auml;hnliche Syntax bei MS-Windows:</p>
<pre>#include &lt;winsock.h&gt;
int bind(SOCKET s, const struct sockaddr FAR* name, int namelen);</pre>
<p>Als ersten Parameter &uuml;bergeben Sie, wie immer, den Socket-Deskriptor, den Sie mit <span class="listing">socket()</span> angelegt haben. Mit dem zweiten Parameter geben Sie einen Zeiger auf eine Adresse und Portnummer an. Damit teilen Sie dem System mit, welche Datenpakete f&uuml;r welches Socket gedacht sind. Die Struktur <span class="listing">sockaddr</span> bzw. (einfacher) <span class="listing">sockaddr_in</span> und deren Mitglieder wurde bereits ausf&uuml;hrlich im Abschnitt zur Funktion <span class="listing">connect()</span> beschrieben. Allerdings sollte hier noch erw&auml;hnt werden, dass ein Rechner h&auml;ufig &uuml;ber verschiedene Rechner (unter mehreren Adressen) und auch verschiedenste Netze (Internet, Intranet, lokales Netzwerk, etc.) erreichbar ist bzw. sein muss. Damit ein Server &uuml;ber alle Netze und IP-Adressen eine Verbindung annimmt, setzt man die IP-Adresse auf <span class="listing">INADDR_ANY<a id="Xxx999341" name="Xxx999341"></a></span> (nat&uuml;rlich im Network Byte Order). Ansonsten geben Sie die IP-Adresse wie gew&ouml;hnlich mit der Funktion <span class="listing">inet_addr()</span> an.</p>
<p>Neben der IP-Adresse ist es au&szlig;erdem auch m&ouml;glich, eine beliebige Portnummer zuzulassen. Hierf&uuml;r m&uuml;ssen Sie lediglich 0 als Portnummer (im Network Byte Order) verwenden. Welchen Port Sie dann erhalten haben, k&ouml;nnen Sie mit der Funktion <span class="listing">getsockname()</span> im Nachhinein abfragen. Mehr zu dieser Funktion k&ouml;nnen Sie aus der entsprechenden Dokumentation entnehmen (bspw. Manual-Page).</p>
<p>Mit dem letzten Parameter geben Sie wiederum die L&auml;nge der Struktur (zweiter Parameter) in Bytes mit <span class="listing">sizeof()</span> an. <span class="listing">bind()</span> liefert im Falle eines Fehlers –1 (gleichwertig mit dem Fehlercode <span class="listing">SOCKET_ERROR</span> unter MS-Windows). Welcher Fehler aufgetreten ist, k&ouml;nnen Sie wiederum mit <span class="listing">errno</span> (Linux/UNIX) bzw. <span class="listing">WSAGetLastError()</span> (MS-Windows) in Erfahrung bringen.</p>
<p>Hierzu ein kurzer Codeausschnitt, wie die Zuweisung einer Adresse auf der Serverseite in der Praxis realisiert wird:</p>
<pre>struct sockaddr_in server;
memset( &amp;server, 0, sizeof (server));
// IPv4-Adresse
server.sin_family = AF_INET;
// Jede IP-Adresse ist g&uuml;ltig
server.sin_addr.s_addr = htonl( INADDR_ANY );
// Portnummer 1234
server.sin_port = htons( 1234 );
if(bind( sock, (struct sockaddr*)&amp;server, sizeof( server)) &lt; 0) {
   //Fehler bei bind()
 }</pre>
<a name="t32"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang" title="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t33"></a><h3 class="t3">28.5.2 listen() – Warteschlange f&uuml;r eingehende Verbindungen einrichten<a id="RxxobKap02800404002D201F018199" name="RxxobKap02800404002D201F018199"></a> 
      <a href="#t2t34"><img src="common/down.gif" width="15" height="15" border="0" alt="down"></a><a href="#t2t32"><img src="common/top.gif" width="15" height="15" border="0" alt="top"></a></h3>
<p><a id="Xxx999347" name="Xxx999347"></a><a id="Xxx999348" name="Xxx999348"></a><a id="Xxx999349" name="Xxx999349"></a>Im n&auml;chsten Schritt m&uuml;ssen Sie eine Warteschlange einrichten, welche auf eingehende Verbindungsw&uuml;nsche eines Clients wartet – man spricht auch gerne vom »horchen« am Socket auf eingehende Verbindungen. Eine solche Warteschlange wird mit der Funktion <span class="listing">listen()</span> eingerichtet. Dabei wird die Programmausf&uuml;hrung des Servers solange unterbrochen, bis ein Verbindungswunsch eintrifft. Mit <span class="listing">listen()</span> lassen sich durchaus mehrere Verbindungsw&uuml;nsche »gleichzeitig« einrichten. Die Syntax dieser Funktion sieht unter Linux/UNIX wie folgt aus:</p>
<pre>#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
int listen( int s, int backlog );</pre>
<p>Unter MS-Windows hingegen sieht die Syntax wie folgt aus:</p>
<pre>#include &lt;winsock.h&gt;
int listen( SOCKET s, int backlog );</pre>
<p>Mit dem ersten Parameter geben Sie wie immer den Socket-Deskriptor an und mit dem zweiten Parameter die L&auml;nge der Warteschlange. Die L&auml;nge der Warteschlange ist die maximale Anzahl von Verbindungsanfragen, die in eine Warteschlange gestellt werden, wenn keine Verbindungen mehr angenommen werden k&ouml;nnen.</p>
<p>Der R&uuml;ckgabewert ist bei Erfolg 0 und auch hier bei einem Fehler –1 (gleich bedeutend unter MS-Windows mit <span class="listing">SOCKET_ERROR</span>). Den Fehlercode selbst k&ouml;nnen Sie wieder wie gehabt mit den <span class="listing">errno</span> (Linux/UNIX) bzw. <span class="listing">WSAGetLastError()</span> (MS-Windows) auswerten.</p>
<p>In der Praxis sieht die Verwendung von <span class="listing">listen()</span> wie folgt aus:</p>
<pre>if( listen( sock, 5 ) == –1 ) {
   // Fehler bei listen()
}</pre>
<a name="t33"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang" title="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t34"></a><h3 class="t3">28.5.3 accept() und die Serverhauptschleife<a id="RxxobKap02800404002D201F0181A2" name="RxxobKap02800404002D201F0181A2"></a> 
      <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><a href="#t2t33"><img src="common/top.gif" width="15" height="15" border="0" alt="top"></a></h3>
<p><a id="Xxx999359" name="Xxx999359"></a><a id="Xxx999360" name="Xxx999360"></a><a id="Xxx999361" name="Xxx999361"></a><a id="Xxx999362" name="Xxx999362"></a>Sobald nun ein oder mehrere Clients Verbindung mit dem Server aufnehmen wollen, k&ouml;nnen Sie sich darauf verlassen, dass die Funktion <span class="listing">accept()</span> immer die n&auml;chste Verbindung aus der Warteschlange holt (die Sie mit <span class="listing">listen()</span> eingerichtet haben). Hier die Syntax dazu unter Linux/UNIX:</p>
<pre>#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
int accept( int s, struct sockaddr *addr, socklen_t addrlen );</pre>
<p>Und eine &auml;hnliche Syntax unter MS-Windows:</p>
<pre>#include &lt;winsock.h&gt;
SOCKET accept( SOCKET s,
               struct sockaddr FAR* addr,
               int FAR* addrlen );</pre>
<p>An der Syntax unter MS-Window l&auml;sst sich gleich erkennen, dass die Funktion <span class="listing">accept()</span> als R&uuml;ckgabewert einen neuen Socket zur&uuml;ckgibt. Hierbei handelt es sich um den gleichen Socket mit denselben Eigenschaften, wie vom ersten Parameter <span class="listing">s</span>.  &Uuml;ber diesen neuen Socket wird anschlie&szlig;end die Daten&uuml;bertragung der Verbindung abgewickelt. Ein so akzeptiertes Socket kann allerdings nicht mehr f&uuml;r weitere Verbindungen verwendet werden. Das Orginalsocket <span class="listing">s</span> hingegen bleibt weiterhin f&uuml;r weitere Verbindungsw&uuml;nsche offen.</p>
<br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext" bgcolor="#000000">
<p class="BStandard"><b>Hinweis   </b><span class="listing">accept()</span> ist eine blockierende Funktion – dass hei&szlig;t, <span class="listing">accept()</span> blockiert den aufrufenden (Server-)Prozess solange, bis eine Verbindung vorhanden ist. Sofern Sie die Eigenschaften des Socket-Deskriptors auf nicht-blockierend &auml;ndern, gibt <span class="listing">accept()</span> einen Fehler zur&uuml;ck, wenn beim Aufruf keine Verbindungen vorhanden sind.</p>
</td>
</tr>
</table><br>
<p>In den zweiten Parameter schreibt <span class="listing">accept()</span> Informationen (IP-Adresse und Port) &uuml;ber den Verbindungspartner in die Struktur <span class="listing">sockaddr</span> bzw. <span class="listing">sockaddr_in</span>. Dies ist logischerweise n&ouml;tig, damit Sie wissen, mit wem Sie es zu tun haben. <span class="listing">addrlen</span> wiederum ist die Gr&ouml;&szlig;e der Struktur <span class="listing">sockaddr</span> bzw. <span class="listing">sockaddr_in</span> – allerdings wird diesmal ein Zeiger auf die Gr&ouml;&szlig;e der Adresse erwartet!</p>
<p>Bei einem Fehler wird –1 (gleich bedeutend mit <span class="listing">SOCKET_ERROR</span> unter MS-Windows) zur&uuml;ckgegeben. Die genaue Ursache des Fehlers k&ouml;nnen Sie wieder mit <span class="listing">errno</span> (Linux/UNIX) bzw. <span class="listing">WSAGetLastError()</span> (MS-Windows) ermitteln. Bei erfolgreicher Ausf&uuml;hrung von <span class="listing">accept()</span> wird, wie bereits beschrieben, ein neuer Socket-Deskriptor zur&uuml;ckgegeben.</p>
<p>Ein wichtiger Teil der Serverprogrammierung ist au&szlig;erdem die Serverhauptschleife. In dieser Schleife wird gew&ouml;hnlich die Funktion <span class="listing">accept()</span> aufgerufen und darin findet auch gew&ouml;hnlich der Datentransfer zwischen Client und Server statt. Hier ein Beispiel einer solchen Serverhauptschleife:</p>
<pre>struct sockaddr_in client;
int sock, sock2;
socklen_t len;
...
for (;;) {
        len = sizeof( client );
        sock2 = accept( sock, (struct sockaddr*)&amp;client, &amp;len);
        if (sock2 &lt; 0) {
            //Fehler bei accept()
        }
        // Hier beginnt der Datenaustausch
    }</pre>
<p>Hierzu nochmals der bildliche Vorgang aller Socket-Funktionen f&uuml;r eine TCP-Verbindung zwischen dem Server und dem Client (siehe Abbildung 28.2).</p>
<p>Selbiger bildlicher Vorgang aller Socket-Funktionen f&uuml;r eine UDP-Verbindung zwischen Server und Client sieht hingegen so aus (siehe Abbildung 28.3).</p>
<p><a name="bild"></a><a href="#bild" onClick="OpenWin('bilder/28_02.gif','Abbildung',600,600)"><img border="0" src="bilderklein/klein28_02.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu Vergr&ouml;&szlig;ern</span></a></p>
<p class="tabunter"><b>Abbildung 28.2   
    </b>Kompletter Vorgang einer TCP-Client/Server-Verbindung</p>
<p><a name="bild"></a><a href="#bild" onClick="OpenWin('bilder/28_03.gif','Abbildung',600,600)"><img border="0" src="bilderklein/klein28_03.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu Vergr&ouml;&szlig;ern</span></a></p>
<p class="tabunter"><b>Abbildung 28.3   
    </b>Kompletter Vorgang einer UDP-Client/Server-Verbindung</p>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a class="navnav" href="c_028_003.htm"> &lt;&lt; zur&uuml;ck</a></td>
<td width="49%">
<div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div>
</td>
<td align="right" width="25%">
<div align="right"><a class="navnav" href="c_028_005.htm">vor &gt;&gt; </a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</td>
<td width="10" valign="top">&nbsp;&nbsp;</td>
<td width="160" valign="top">
    <table border="0" cellpadding="0" cellspacing="0" width="160">
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2">
                            &nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opc" class="navs">
                            <strong>Zum Katalog</strong></a>
                        </td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2">
                            <img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td><a href="http://www.galileocomputing.de/899?GPP=opc">
                                        <img src="common/643_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C von A bis Z" title="Zum Katalog: C von A bis Z">
                                        <br /><strong>C von A bis Z</strong><br /><img src="common/pfeil_rechts5.gif" border="0" alt="">bestellen</a>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2"><strong>&nbsp;Ihre Meinung?</strong></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br /><a href="mailto:stefan.krumbiegel@galileo-press.de?subject=Meinung%20zu%20C%20von%20A%20bis%20Z%20(openbook)"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
                                    <br /><br /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opc" class="navs"><strong>Buchtipps</strong></a></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1007?GPP=opc">
                        <img src="common/683_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Shell-Programmierung" title="Zum Katalog: Shell-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Shell-Programmierung</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1137?GPP=opc">
                        <img src="common/749_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux-UNIX-Programmierung" title="Zum Katalog: Linux-UNIX-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux-UNIX-Programmierung</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1004?GPP=opc">
                        <img src="common/644_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C/C++" title="Zum Katalog: C/C++"><br /><br /><br /><br /><br /><br /><br />&nbsp;C/C++</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/880?GPP=opc">
                        <img src="common/573_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: UML 2.0" title="Zum Katalog: UML 2.0"><br /><br /><br /><br /><br /><br /><br />&nbsp;UML 2.0</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/967?GPP=opc">
                        <img src="common/626_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Reguläre Ausdrücke" title="Zum Katalog: Reguläre Ausdrücke"><br /><br /><br /><br /><br /><br /><br />&nbsp;Reguläre Ausdrücke</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/941?GPP=opc">
                        <img src="common/677_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux" title="Zum Katalog: Linux"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux</a><br /><br /></td>
                    </tr>
                </table></td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2"><strong>&nbsp;Shopping</strong></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br /><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=opc"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br /><br /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
</td>
</tr>
</table>
<br /><br />
<hr width="70%" align="center"><br />
<div align="center">
<p class="standard"><b>Copyright © Galileo Press 2006</b><br>F&uuml;r Ihren privaten Gebrauch d&uuml;rfen Sie die Online-Version nat&uuml;rlich ausdrucken. Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die gebundene Ausgabe: Das Werk einschlie&szlig;lich aller seiner Teile ist urheberrechtlich gesch&uuml;tzt. Alle Rechte vorbehalten einschlie&szlig;lich der Vervielf&auml;ltigung, &Uuml;bersetzung, Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>
</html>
