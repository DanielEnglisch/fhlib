<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: C von A bis Z – 18.26 Datei &ouml;ffnen – open</title>
<meta name="title" content="Galileo Computing :: C von A bis Z">
<meta name="author" content="J&uuml;rgen Wolf">
<meta name="publisher" content="Galileo Press 2006">
<meta name="copyright" content="Galileo Press 2006">
<meta name="description" content="C von A bis Z - Das umfassende Handbuch f&uuml;r Linux, Unix und Windows – 2., aktualisierte und erweiterte Auflage 2006, geb., mit CD und Referenzkarte – ISBN 3-89842-643-2">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href="c_018_024.htm">
<link rel="next" href="c_018_026.htm"><script type="text/javascript" language="JavaScript"><!--
function OpenWin(url,name,height,width)
{
  var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
  InfoWin.focus();
}
//--></script></head>
<body vlink="#000099" link="#000099" alink="#000099">
    <table width="100%" height="74" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
        <tr>
            <td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook/?GPP=opc"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
            <td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=opc"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle B&uuml;cher. Auch f&uuml;r Einsteiger." title="Galileo Computing - Professionelle B&uuml;cher. Auch f&uuml;r Einsteiger."></a></td>
        </tr>
    </table>
    <div align="right"><a href="http://www.galileocomputing.de/?GPP=opc" class="navnav">Professionelle B&uuml;cher. Auch f&uuml;r Einsteiger.</a></div>
    <br />
<table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td width="156" valign="top">
    <table border="0" cellpadding="0" cellspacing="0" width="100%" align="left">
        <tr>
            <td colspan="2" class="nav1" align="left" valign="top" height="150">
                <table class="tbl1" width="150" border="0" cellpadding="3" cellspacing="0">
<tr>
<td class="tbl2" height="25"><a class="nav" href="./index.htm">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="./c_000Vorwort_000.htm#Xxx999266">Vorwort</a></td>
</tr>
<tr>
<td><a class="navnav" href="./c_000VorwortGutachter_000.htm#Xxx999275">Vorwort des Gutachters</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_001_000.htm#Xxx999328">1 Einstieg in C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_002_000.htm#Xxx999328">2 Das erste Programm</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_003_000.htm#Xxx999328">3 Zeichens&auml;tze</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_004_000.htm#Xxx999329">4 Kommentare in C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_005_000.htm#Xxx999330">5 Formatierte Eingabe mit scanf()</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_006_000.htm#Xxx999330">6 Formatierte Ausgabe mit printf</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_007_000.htm#Xxx999329">7 Elementare Datentypen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_008_000.htm#Xxx999328">8 Operatoren</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_009_000.htm#Xxx999328">9 Typenumwandlung</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_010_000.htm#Xxx999328">10 Kontrollstrukturen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_011_000.htm#Xxx999328">11 Funktionen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_012_000.htm#Xxx999328">12 Pr&auml;prozessor-Direktiven</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_013_000.htm#Xxx999328">13 Arrays</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_014_000.htm#Xxx999328">14 Zeiger (Pointer)</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_015_000.htm#Xxx999328">15 Kommandozeilenargumente</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_016_000.htm#Xxx999328">16 Dynamische Speicherverwaltung</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_017_000.htm#Xxx999328">17 Strukturen</A></td>
</tr>
<tr>
<td><A class="navh" href="./c_018_000.htm#Xxx999328">18 Ein-/Ausgabe-Funktionen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_019_000.htm#Xxx999328">19 Attribute von Dateien und Arbeiten mit Verzeichnissen (nicht ANSI C)</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_020_000.htm#Xxx999328">20 Arbeiten mit variablen langen Argumentlisten – &lt;stdarg.h&gt;</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_021_000.htm#Xxx999328">21 Zeitroutinen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_022_000.htm#Xxx999328">22 Weitere Headerdateien und ihre Funktionen (ANSI C)</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_023_000.htm#Xxx999328">23 Dynamische Datenstrukturen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_024_000.htm#Xxx999328">24 Algorithmen</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_025_000.htm#Xxx999328">25 Sicheres Programmieren</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_026_000.htm#Xxx999328">26 CGI mit C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_027_000.htm#Xxx999328">27 MySQL und C</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_028_000.htm#Xxx999328">28 Netzwerkprogrammierung und Cross-Plattform-Entwicklung</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_029_000.htm#Xxx999328">29 Wie geht’s jetzt weiter?</A></td>
</tr>
<tr>
<td><a class="navnav" href="./c_030Anhang_000.htm#Xxx999266">A Anhang</A></td>
</tr>
<tr>
<td><a class="navnav" href="./stichwort.htm#Xxx512322">Index</a></td>
</tr>
<tr><td><br /><a class="navnav" href="http://download.galileo-press.de/openbook/c_von_a_bis_z/galileocomputing_c_von_a_bis_z.zip"><strong>Download:</strong><br />- ZIP, ca. 8,5 MB</a></td></tr>
<tr><td><a class="navnav" href="http://www.galileocomputing.de/899?GPP=opc">Buch bestellen</a></td></tr>
<tr><td><a class="navnav" href="mailto:stefan.krumbiegel@galileo-press.de?subject=Meinung%20zu%20C%20von%20A%20bis%20Z%20(openbook)">Ihre Meinung?</a><br /><br /></td></tr>
</table></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10"></td>
<td width="85%" valign="top" align="center">
    <div align="center">
        <table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
            <tr>
                <td width="100%" class="start" colspan="1" height="22" align="center">
                    <table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a class="navnav" href="c_018_024.htm"> &lt;&lt; zur&uuml;ck</a></td>
<td width="49%">
<div align="center"><a href="http://www.galileocomputing.de/?GPP=opc" class="navnav">Galileo Computing /</a><a class="navnav" href="http://www.galileocomputing.de/katalog/openbook/?GPP=opc"> &lt;openbook&gt; /</a><a href="./index.htm" class="navnav"> C von A bis Z</a></div>
</td>
<td align="right" width="25%">
<div align="right"><a class="navnav" href="c_018_026.htm">vor &gt;&gt; </a></div>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td width="100%" valign="top">
    <table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
        <tr>
            <td colspan="2"><a href="http://www.galileocomputing.de/899?GPP=opc" class="buchtitel">C von A bis Z</a><span class="autor"> von J&uuml;rgen Wolf</span><br><span class="untertitel">Das umfassende Handbuch f&uuml;r Linux, Unix und Windows <br />– 2., aktualisierte und erweiterte Auflage 2006</span></td>
        </tr>
        <tr>
            <td valign="top" width="90"><a href="http://www.galileocomputing.de/899?GPP=opc"><img src="common/643.gif" border="0" alt="Buch: C von A bis Z" title="Buch: C von A bis Z" align="left"><br /><br /><span class="autor"><strong>C von A bis Z</strong><br />1.116 S., mit CD, Referenzkarte, 39,90 Euro<br />Galileo Computing<br />ISBN 3-89842-643-2</span></a></a></td>
            <td width="80%">
<table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="3" class="kap"><b>Kapitel <a href="./c_018_000.htm#RxxobKap018000040029FC1F01818C">18 Ein-/Ausgabe-Funktionen</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_000.htm#RxxobKap018000040029FC1F01818E">18.1 Was ist eine Datei?</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_001.htm#RxxobKap01800104002A171F03418C">18.2 Formatierte und unformatierte Ein-/Ausgabe</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_002.htm#RxxobKap01800204002A181F01A18C">18.3 Streams</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_003.htm#RxxobKap01800304002A191F02918C">18.4 H&ouml;here Ein-/Ausgabe-Funktionen</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_004.htm#RxxobKap01800404002A1A1F03618C">18.5 Datei (Stream) &ouml;ffnen – fopen</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_004.htm#RxxobKap01800404002A1A1F0361B5">18.5.1 Modus f&uuml;r fopen()</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_004.htm#RxxobKap01800404002A1A1F036208">18.5.2 Maximale Anzahl ge&ouml;ffneter Dateien – FOPEN_MAX</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_005.htm#RxxobKap01800504002A1B1F03018C">18.6 Zeichenweise Lesen und Schreiben – getchar und putchar</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_005.htm#RxxobKap01800504002A1B1F03019C">18.6.1 Ein etwas portableres getch()</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_006.htm#RxxobKap01800604002A1C1F02A18C">18.7 Zeichenweise Lesen und Schreiben – putc/fputc und getc/fgetc</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_007.htm#RxxobKap01800704002A1D1F04718C">18.8 Datei (Stream) schlie&szlig;en – fclose</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_008.htm#RxxobKap01800804002A1E1F03E18C">18.9 Formatiertes Einlesen/Ausgeben von Streams mit fprintf und fscanf</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_009.htm#RxxobKap01800904002A1F1F04D18C">18.10 Standard-Streams in C</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_009.htm#RxxobKap01800904002A1F1F04D198">18.10.1 Standard-Streams umleiten</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_010.htm#RxxobKap01801004002A201F03A18C">18.11 Fehlerbehandlung von Streams – feof, ferror und clearerr</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_011.htm#RxxobKap01801104002A211F04518C">18.12 Gelesenes Zeichen in die Eingabe zur&uuml;ck-schieben – ungetc</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_012.htm#RxxobKap01801204002A221F02B18C">18.13 (Tastatur-)Puffer leeren – fflush</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_012.htm#RxxobKap01801204002A221F02B194">18.13.1 Pufferung</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_013.htm#RxxobKap01801304002A231F01418C">18.14 Stream positionieren – fseek, rewind und ftell</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_014.htm#RxxobKap01801404002A241F01D18C">18.15 Stream positionieren – fsetpos, fgetpos</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_015.htm#RxxobKap01801504002A251F04018C">18.16 Zeilenweise Ein-/Ausgabe von Streams</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_015.htm#RxxobKap01801504002A251F04018D">18.16.1 Zeilenweise Lesen mit gets/fgets</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_015.htm#RxxobKap01801504002A251F04019E">18.16.2 Zeilenweise Schreiben mit puts/fputs</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_015.htm#RxxobKap01801504002A251F0401A4">18.16.3 Zeilenweise Einlesen vom Stream mit getline() (nicht ANSI C)</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_015.htm#RxxobKap01801504002A251F0401B0">18.16.4 Rezepte f&uuml;r zeilenweises Einlesen und Ausgeben</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_016.htm#RxxobKap01801604002A261F02518C">18.17 Blockweise Lesen und Schreiben – fread und fwrite</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_016.htm#RxxobKap01801604002A261F025194">18.17.1 Blockweises Lesen – fread()</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_016.htm#RxxobKap01801604002A261F0251A0">18.17.2 Blockweises Schreiben – fwrite()</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_016.htm#RxxobKap01801604002A261F0251BD">18.17.3 Big-Endian und Little-Endian</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_017.htm#RxxobKap01801704002A271F01B18C">18.18 Datei (Stream) erneut &ouml;ffnen – freopen</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_018.htm#RxxobKap01801804002A281F03718C">18.19 Datei l&ouml;schen oder umbenennen – remove und rename</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_018.htm#RxxobKap01801804002A281F03718E">18.19.1 remove()</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_018.htm#RxxobKap01801804002A281F037198">18.19.2 rename()</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_019.htm#RxxobKap01801904002A291F02118C">18.20 Pufferung einstellen – setbuf und setvbuf</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_020.htm#RxxobKap01802004002A2A1F02818C">18.21 Tempor&auml;re Dateien erzeugen – tmpfile und tmpnam</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline"><b><a href="./c_018_020.htm#RxxobKap01802004002A2A1F0281A5">18.21.1 mkstemp() – Sichere Alternative f&uuml;r Linux/UNIX (nicht ANSI C)</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_021.htm#RxxobKap01802104002A2B1F03018C">18.22 Fehlerausgabe mit strerror und perror</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_022.htm#RxxobKap01802204002A2C1F01018C">18.23 Formatiert in einem String schreiben und formatiert aus einem String lesen – sscanf und sprintf</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_023.htm#RxxobKap01802304002A2D1F03E18C">18.24 Fortgeschrittenes Thema</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_024.htm#RxxobKap01802404002A2E1F04818C">18.25 Low-Level-Datei-I/O-Funktionen (nicht ANSI C)</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a class="navh" href="#RxxobKap01802504002A2F1F02418C">18.26 Datei &ouml;ffnen – open</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_026.htm#RxxobKap01802604002A301F03118C">18.27 Datei schlie&szlig;en – close</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_027.htm#RxxobKap01802704002A311F03718C">18.28 Datei erzeugen – creat</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_028.htm#RxxobKap01802804002A321F02F18C">18.29 Schreiben und Lesen – write und read</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_029.htm#RxxobKap01802904002A331F01E18C">18.30 File-Deskriptor positionieren – lseek</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_030.htm#RxxobKap01803004002A341F01C18C">18.31 File-Deskriptor von einem Stream – fileno</a></b></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="gp"></td>
<td valign="baseline" colspan="2"><b><a href="./c_018_031.htm#RxxobKap01803104002A351F03718C">18.32 Stream von File-Deskriptor – fdopen</a></b></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td>
<a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang" title="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2">18.26 Datei &ouml;ffnen – open<a id="RxxobKap01802504002A2F1F02418C" name="RxxobKap01802504002A2F1F02418C"></a> 
      <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"></h2>
<p><a id="Xxx999329" name="Xxx999329"></a>&Ouml;ffnen Sie eine Datei mit der Funktion <span class="listing">open()</span>, so wird der Datei ein Deskriptor – auch File-Deskriptor genannt – zugeordnet. Ein File-Deskriptor ist eine positive kleine Zahl, die vom Betriebssystem vergeben wird. &Uuml;ber diesen Deskriptor geben Sie an, ob gelesen oder geschrieben werden soll. Mit der Funktion <span class="listing">open()</span> kann zudem auch gleich eine Datei angelegt werden. Hier die Syntax mit den dazugeh&ouml;renden Headerdateien, die mit eingebunden werden m&uuml;ssen, f&uuml;r Linux/UNIX:<a id="Xxx999331" name="Xxx999331"></a></p>
<pre>#include &lt;fcntl.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;
int open(const char *pfad, int modus);
int open(const char *pfadname, int flags, mode_t zugriffsrechte);</pre>
<p>und die Syntax mit Headerdateien f&uuml;r Windows/MS-DOS:</p>
<pre>#include &lt;fcntl.h&gt;
#include &lt;io.h&gt;
#include &lt;sys\stat.h&gt;
int open(const char *pfad, int modus);
int open(const char *pfadname, int flags, mode_t zugriffsrechte);</pre>
<p>Als Pfadangabe m&uuml;ssen Sie den absoluten oder relativen Pfad der Datei angeben, die ge&ouml;ffnet werden soll. Da der Prototyp (unter Linux/UNIX zumindest) in Wirklichkeit korrekt open(const char *, int, ...) lautet, kann je nach Situation das dritte Argument auch wegfallen.</p>
<p>Beim Modus gibt es mehrere Varianten, aber diese sind systemabh&auml;ngig. Einer von den folgenden drei Modi muss immer angegeben werden:</p>
<br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter">
<p><span class="tabunter"><b>Tabelle 18.11   
    </b>Bearbeitungsmodi f&uuml;r open()</span></p>
</caption>
<tr>
<td class="tabellenkopf" bgcolor="#000000"><b>Modus</b>
</td>
<td class="tabellenkopf" bgcolor="#000000"><b>Bedeutung</b>
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">O_WRONLY<a id="Xxx999343" name="Xxx999343"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Nur zum Schreiben &ouml;ffnen
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">O_RDWR<a id="Xxx999348" name="Xxx999348"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Zum Lesen und Schreiben &ouml;ffnen
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">O_RDONLY<a id="Xxx999353" name="Xxx999353"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Nur zum Lesen &ouml;ffnen
</td>
</tr>
</table><br>
<p>Dies sieht dann bei Linux/UNIX folgenderma&szlig;en aus:</p>
<pre>int fh;
if((fh = open("/home/programmname", O_RDONLY)) != –1)</pre>
<p>oder mit Windows/MS-DOS:</p>
<pre>if((fh = open("c:\\config.sys", O_RDONLY)) != –1)</pre>
<p>In den beiden Beispielen wird eine Datei nur zum Lesen ge&ouml;ffnet. Zu einem dieser drei genannten Modi k&ouml;nnen Sie mit dem bitweisen ODER-Zeichen (<span class="listing">|</span>) weitere Aktionen verkn&uuml;pfen. Dies sieht dann so aus:</p>
<pre>if((fh = open("c:\\test.sys", O_WRONLY|O_CREAT)) != –1)</pre>
<p>Hiermit wird eine Datei zum Schreiben ge&ouml;ffnet. Existiert diese Datei nicht, so wird sie erzeugt (<span class="listing">O_CREAT</span>). Existiert diese Datei, so wird der zus&auml;tzliche Modus <span class="listing">O_CREATE</span> ignoriert. Folgende zus&auml;tzliche Modi stehen f&uuml;r Linux/UNIX und Windows/MS-DOS dar&uuml;ber hinaus zur Verf&uuml;gung:<a id="Xxx999372" name="Xxx999372"></a></p>
<br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter">
<p><span class="tabunter"><b>Tabelle 18.12   
    </b>Weitere Bearbeitungsmodi f&uuml;r open()</span></p>
</caption>
<tr>
<td class="tabellenkopf" bgcolor="#000000"><b>Modus</b>
</td>
<td class="tabellenkopf" bgcolor="#000000"><b>Bedeutung</b>
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">O_CREAT<a id="Xxx999379" name="Xxx999379"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Falls Datei nicht existiert, wird sie neu angelegt. Falls die Datei existiert, ist O_CREAT ohne Wirkung.
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">O_APPEND<a id="Xxx999384" name="Xxx999384"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Datei &ouml;ffnen zum Schreiben am Ende.
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">O_EXCL<a id="Xxx999389" name="Xxx999389"></a>
</td>
<td class="tabellentext" bgcolor="#000000">O_EXCL kombiniert mit O_CREAT bedeutet, dass die Datei nicht ge&ouml;ffnet werden kann, wenn sie bereits existiert und open() den Wert –1 zur&uuml;ckliefert (-1 == Fehler).
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">O_TRUNC<a id="Xxx999394" name="Xxx999394"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Datei, die zum Schreiben ge&ouml;ffnet wird, wird geleert. Darauf folgendes Schreiben bewirkt erneutes Beschreiben der Datei von Anfang an. Die Attribute der Datei bleiben erhalten.
</td>
</tr>
</table><br>
<p>Beispielsweise wird mit</p>
<pre>if((fh = open("/home/Name.txt", O_WRONLY | O_TRUNC)) != –1)</pre>
<p>erreicht, dass die Datei »Name.txt« zum Schreiben ge&ouml;ffnet wird. Der Inhalt dieser Datei wird gel&ouml;scht, und sie kann neu beschrieben werden. Weitere Modi, die nur f&uuml;r Linux/UNIX zur Verf&uuml;gung stehen, sind:</p>
<br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter">
<p><span class="tabunter"><b>Tabelle 18.13   
    </b>Bearbeitungsmodi nur f&uuml;r Linux/UNIX</span></p>
</caption>
<tr>
<td class="tabellenkopf" bgcolor="#000000"><b>Modus</b>
</td>
<td class="tabellenkopf" bgcolor="#000000"><b>Bedeutung</b>
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">O_NOCTTY<a id="Xxx999415" name="Xxx999415"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Falls der Pfadname der Name eines Terminals ist, so sollte dieser nicht der neue Kontrollterminal des Prozesses werden, sofern der aktuelle Prozess kein Kontrollterminal besitzt.
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">O_NONBLOCK<a id="Xxx999420" name="Xxx999420"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Falls der Pfadname der Name eines FIFOs oder einer Ger&auml;tedatei ist, wird der Prozess beim &Ouml;ffnen und bei nachfolgenden I/O-Operationen nicht blockiert. Dieses Flag zeigt seine Wirkung erst bei einer Pipe oder nichtblockierenden Sockets.
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">O_SYNC<a id="Xxx999425" name="Xxx999425"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Jeder Schreibvorgang auf das Medium wird direkt ausgef&uuml;hrt und es wird gewartet, bis der Schreibvorgang komplett beendet wurde. Dieses Flag setzt den Pufferungsmechanismus au&szlig;er Kraft. O_SYNC wird nicht von POSIX.1 unterst&uuml;tzt, wohl aber von SVR4.
</td>
</tr>
</table><br>
<p>F&uuml;r Windows/MS-DOS gibt es folgende extra Modi:</p>
<br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter">
<p><span class="tabunter"><b>Tabelle 18.14   
    </b>Bearbeitungsmodi nur f&uuml;r MS-DOS/Windows</span></p>
</caption>
<tr>
<td class="tabellenkopf" bgcolor="#000000"><b>Modus</b>
</td>
<td class="tabellenkopf" bgcolor="#000000"><b>Bedeutung</b>
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">O_BINARY<a id="Xxx999444" name="Xxx999444"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Legt den Bin&auml;rmodus der Datei fest
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">O_TEXT<a id="Xxx999449" name="Xxx999449"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Legt den Textmodus der Datei fest
</td>
</tr>
</table><br>
<p>Jetzt folgen noch einige Modi, mit denen die Zugriffsrechte auf eine Datei erteilt werden k&ouml;nnen. Zuerst f&uuml;r Windows/MS-DOS:<a id="Xxx999462" name="Xxx999462"></a></p>
<br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter">
<p><span class="tabunter"><b>Tabelle 18.15   
    </b>Zugriffsrechte auf eine Datei erteilen (MS-DOS/Windows)</span></p>
</caption>
<tr>
<td class="tabellenkopf" bgcolor="#000000"><b>Modus f&uuml;r Zugriffe</b>
</td>
<td class="tabellenkopf" bgcolor="#000000"><b>Bedeutung</b>
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IWRITE<a id="Xxx999469" name="Xxx999469"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Schreiben erlaubt
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IREAD<a id="Xxx999474" name="Xxx999474"></a>
</td>
<td class="tabellentext" bgcolor="#000000">Lesen erlaubt
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IREAD | SIWRITE
</td>
<td class="tabellentext" bgcolor="#000000">Lesen und Schreiben erlaubt
</td>
</tr>
</table><br>
<p>Mit folgender Zeile wird z.B. eine Datei erzeugt, die nur gelesen werden darf:</p>
<pre>if((fh=open("new.xxx", O_CREAT , S_IREAD)) == –1)</pre>
<p>Wenn Lesen und Schreiben erlaubt sein soll, sieht dies so aus:</p>
<pre>if((fh=open("new.xxx",O_CREAT, S_IREAD|S_IWRITE)) == –1)</pre>
<p>Diese drei Zugriffsrechte f&uuml;r Windows/MS-DOS stehen in der Headerdatei <span class="listing">&lt;sys\stat.h&gt;</span>.</p>
<p>F&uuml;r Linux/UNIX k&ouml;nnen Sie folgende Zugriffsrechte erteilen, welche sich in der Headerdatei <span class="listing">&lt;sys/stat.h&gt;<a id="Xxx999496" name="Xxx999496"></a></span> befinden. Hier die Modi f&uuml;r Zugriffsrechte unter Linux/UNIX:</p>
<br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<caption class="tabunter">
<p><span class="tabunter"><b>Tabelle 18.16   
    </b>Zugriffsrechte auf eine Datei erteilen (Linux/UNIX)</span></p>
</caption>
<tr>
<td class="tabellenkopf" bgcolor="#000000"><b>Modus f&uuml;r Zugriffe</b>
</td>
<td class="tabellenkopf" bgcolor="#000000"><b>Bedeutung</b>
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_ISUID<a id="Xxx999503" name="Xxx999503"></a>
</td>
<td class="tabellentext" bgcolor="#000000">set-user-ID Bit
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_ISGID<a id="Xxx999508" name="Xxx999508"></a>
</td>
<td class="tabellentext" bgcolor="#000000">set-group-ID Bit
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_ISVTX<a id="Xxx999513" name="Xxx999513"></a>
</td>
<td class="tabellentext" bgcolor="#000000">sticky Bit (saved-text Bit)
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IRUSR<a id="Xxx999518" name="Xxx999518"></a>
</td>
<td class="tabellentext" bgcolor="#000000">read (user; Leserecht f&uuml;r Eigent&uuml;mer)
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IWUSR<a id="Xxx999523" name="Xxx999523"></a>
</td>
<td class="tabellentext" bgcolor="#000000">write (user; Schreibrecht f&uuml;r Eigent&uuml;mer)
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IXUSR<a id="Xxx999528" name="Xxx999528"></a>
</td>
<td class="tabellentext" bgcolor="#000000">execute (user; Ausf&uuml;hrungsrecht f&uuml;r Eigent&uuml;mer)
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IRWXU<a id="Xxx999533" name="Xxx999533"></a>
</td>
<td class="tabellentext" bgcolor="#000000">read, write, execute (user; Lese-, Schreib-, Ausf&uuml;hrungsrecht f&uuml;r Eigent&uuml;mer)
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IRGRP<a id="Xxx999538" name="Xxx999538"></a>
</td>
<td class="tabellentext" bgcolor="#000000">read (group; Leserecht f&uuml;r Gruppe)
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IWGRP<a id="Xxx999543" name="Xxx999543"></a>
</td>
<td class="tabellentext" bgcolor="#000000">write (group; Schreibrecht f&uuml;r Gruppe)
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IXGRP<a id="Xxx999548" name="Xxx999548"></a>
</td>
<td class="tabellentext" bgcolor="#000000">execute (group; Ausf&uuml;hrungsrecht f&uuml;r Gruppe)
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IRWXG<a id="Xxx999553" name="Xxx999553"></a>
</td>
<td class="tabellentext" bgcolor="#000000">read, write, execute (group; Lese-, Schreib-, Ausf&uuml;hrungsrecht f&uuml;r Eigent&uuml;mer)
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IROTH<a id="Xxx999558" name="Xxx999558"></a>
</td>
<td class="tabellentext" bgcolor="#000000">read (other; Leserecht f&uuml;r alle anderen Benutzer)
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IWOTH<a id="Xxx999563" name="Xxx999563"></a>
</td>
<td class="tabellentext" bgcolor="#000000">write (other; Schreibrecht f&uuml;r alle anderen Benutzer)
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IXOTH<a id="Xxx999568" name="Xxx999568"></a>
</td>
<td class="tabellentext" bgcolor="#000000">execute (other; Ausf&uuml;hrungsrecht f&uuml;r alle anderen Benutzer)
</td>
</tr>
<tr>
<td class="tabellentext" bgcolor="#000000">S_IRWXO<a id="Xxx999573" name="Xxx999573"></a>
</td>
<td class="tabellentext" bgcolor="#000000">read, write, execute (other; Lese-, Schreib-, Ausf&uuml;hrungsrecht f&uuml;r alle anderen Benutzer)
</td>
</tr>
</table><br>
<br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext" bgcolor="#000000">
<p class="BStandard"><b>Hinweis   </b>Sofern Sie mit der oktalen Schreibweise der Rechtevergabe vertraut sind, k&ouml;nnen Sie nat&uuml;rlich diese als Alternative verwenden. Bspw.:
<span class="listing">fd</span> <span class="listing">=</span> <span class="listing">open(</span> <span class="listing">new_file,</span> <span class="listing">O_WRONLY</span> <span class="listing">|</span> <span class="listing">O_EXCL</span> <span class="listing">|</span> <span class="listing">O_CREAT,</span> 0644<span class="listing">);</span></p>
</td>
</tr>
</table><br>
<p>Au&szlig;erdem sollten Sie noch wissen, dass bei Verwendung des Flags <span class="listing">O_CREAT</span> die Zugriffsrechte unter Linux/UNIX nicht unbedingt gew&auml;hrt werden m&uuml;ssen, da die Einschr&auml;nkungsmaske die Vergabe von Rechten verhindern kann (wird) – und somit die Rechte selbst. Aus diesem Grund wurde mithilfe der Funktion <span class="listing">umask()</span> die Maske zur Wegnahme von Rechtebits auf 0 gesetzt, womit alle Zugriffsrechte in dieser Maske erlaubt werden.</p>
<br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext" bgcolor="#000000">
<p class="BStandard"><b>Tipp   </b>Standardm&auml;&szlig;ig wird meistens die Einschr&auml;nkungsmaske 022 vergeben. Es ist aber auch m&ouml;glich, mit dem Shell-Builtin-Kommando umask die eigene Einschr&auml;nkungsmaske zu &auml;ndern. Innerhalb eines Listings z.B. w&uuml;rde die neu gesetzte umask von 0 nur w&auml;hrend der Ausf&uuml;hrung des Programms (und der Unterprozesse) g&uuml;ltig. Dazu kann man bspw. einen entsprechenden umask-Aufruf in einer Startup-Datei wie .profile eintragen, so dass beim Start einer entsprechenden Shell die Einschr&auml;nkungsmaske automatisch gesetzt wird.</p>
</td>
</tr>
</table><br>
<p>Im folgenden Listing soll eine Datei zum Lesen und Schreiben ge&ouml;ffnet werden. Existiert diese nicht, wird eine neue Datei erzeugt. Falls sie existiert, wird der Inhalt gel&ouml;scht und neu beschrieben. Hier der Quellcode, der portabel gehalten wurde:</p>
<pre>/* open1.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;fcntl.h&gt;
#ifdef __unix__
      #include &lt;unistd.h&gt;
#elif __MSDOS__ || __WIN32__ || _MSC_VER
      #include &lt;io.h&gt;
#endif
int main(void) {
   int fh;
   if((fh=open("adress.txt", O_RDWR|O_CREAT|O_TRUNC))==-1) {
      perror("Fehler bei open()");
      return EXIT_FAILURE;
   }
   close(fh);
   return EXIT_SUCCESS;
}</pre>
<p>Falls Sie jetzt noch die Zugriffsrechte auf diese Datei vergeben wollen, muss f&uuml;r Linux/UNIX die Headerdatei <span class="listing">&lt;sys/stat.h&gt;</span> und f&uuml;r MS-DOS/Windows <span class="listing">&lt;sys\stat.h&gt;</span> eingebunden werden (beachten Sie den Slash und Backslash). Soll bspw. der User unter Linux diese Datei nur lesen d&uuml;rfen, so muss nur mithilfe des ODER-Operators der Modus <span class="listing">S_IRUSR</span> hinzugef&uuml;gt werden:</p>
<pre>// Alle Zugriffsrechte der Einschr&auml;nkungsmaske erlauben
umask(0);
open("adress.txt", O_RDWR|O_CREAT|O_TRUNC, S_IRUSR)) == –1)</pre>
<p>Ein weiteres Beispiel mit <span class="listing">open()</span> ist z.B. das Aufrufen von Programmen aus der Kommandozeile:</p>
<pre>/* open2.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;fcntl.h&gt;
#ifdef __unix__
      #include &lt;unistd.h&gt;
      #include &lt;sys/stat.h&gt;
      #include &lt;sys/types.h&gt;
#elif __MSDOS__ || __WIN32__ || _MSC_VER
      #include &lt;io.h&gt;
      #include &lt;sys\stat.h&gt;
#endif
int main(int argc, char **argv) {
   int fh;
   if( (fh=open(*++argv,O_RDONLY)) == –1)
      perror(*argv);
   else
      close(fh);
   return EXIT_SUCCESS;
}</pre>
<p>In diesem Beispiel wird eine Datei zum Lesen ge&ouml;ffnet, deren Name als zweites Argument in der Kommandozeile angegeben wurde. Falls die Datei nicht existiert, wird eine entsprechende Fehlermeldung wie</p>
<pre>Programmname : No such File in Directory</pre>
<p>ausgegeben. Danach wird der File-Deskriptor wieder geschlossen. Falls die Datei, die eben aufgerufen wurde, nicht existiert, aber anschlie&szlig;end erzeugt werden soll, dann ist dies so m&ouml;glich:</p>
<pre>/* open3.c */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;fcntl.h&gt;
#ifdef __unix__
      #include &lt;unistd.h&gt;
      #include &lt;sys/stat.h&gt;
      #include &lt;sys/types.h&gt;
#elif __MSDOS__ || __WIN32__ || _MSC_VER
      #include &lt;io.h&gt;
      #include &lt;sys\stat.h&gt;
#endif
int main(int argc,char **argv) {
   int fh;
   if(*++argv == NULL)
      return EXIT_FAILURE;  /* Keine Argumente vorhanden */
   if( (fh = open(*argv, O_RDONLY)) == –1)
      if( (fh = open(*argv,O_RDWR|O_CREAT)) == –1)
         perror(*argv);
   close(fh);
   return EXIT_SUCCESS;
}</pre>
<p>Hiermit wird zuerst versucht, die Datei zu &ouml;ffnen. Falls die Datei nicht existiert, wird diese gleich zum Lesen und Schreiben erzeugt.</p>
<p>Bei der Erl&auml;uterung der Low-Level-Datei-E/A-Funktionen konnten Sie schon erkennen, warum eher auf die h&ouml;here Ebene zur&uuml;ckgegriffen wird. Wer auf mehreren Systemen programmiert, kann schnell durcheinander kommen. Was bei dem einen System gelingt, ist bei dem anderen nicht machbar. Andererseits ist es durchaus hilfreich, beim Erzeugen einer Datei die Zugriffsrechte von Beginn an festzulegen (gilt speziell unter Linux/UNIX). Daraus ergibt sich, dass Low-Level-Datei-E/A vorwiegend zur Systemprogrammierung eingesetzt werden.</p>
<p>Vor allem f&uuml;r Linux/UNIX-Programmierer ist diese Art, eine Datei (auch Ger&auml;tedateien) zu &ouml;ffnen, eine sehr wichtige Schnittstelle. Bspw. kann man hier mit folgendem einfachen Code-Konstrukt etwas auf dem Drucker ausgeben lassen:</p>
<pre>int fd;
// Drucker auf /dev/lp0 zum Schreiben &ouml;ffnen
fd = open("/dev/lp0", O_WRONLY);
if(fd &gt;= 0)
   // Drucken ...
   write(fd, buf, buf_size);
close(fd);</pre>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a class="navnav" href="c_018_024.htm"> &lt;&lt; zur&uuml;ck</a></td>
<td width="49%">
<div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div>
</td>
<td align="right" width="25%">
<div align="right"><a class="navnav" href="c_018_026.htm">vor &gt;&gt; </a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</td>
<td width="10" valign="top">&nbsp;&nbsp;</td>
<td width="160" valign="top">
    <table border="0" cellpadding="0" cellspacing="0" width="160">
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2">
                            &nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opc" class="navs">
                            <strong>Zum Katalog</strong></a>
                        </td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2">
                            <img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td><a href="http://www.galileocomputing.de/899?GPP=opc">
                                        <img src="common/643_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C von A bis Z" title="Zum Katalog: C von A bis Z">
                                        <br /><strong>C von A bis Z</strong><br /><img src="common/pfeil_rechts5.gif" border="0" alt="">bestellen</a>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2"><strong>&nbsp;Ihre Meinung?</strong></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br /><a href="mailto:stefan.krumbiegel@galileo-press.de?subject=Meinung%20zu%20C%20von%20A%20bis%20Z%20(openbook)"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
                                    <br /><br /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opc" class="navs"><strong>Buchtipps</strong></a></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1007?GPP=opc">
                        <img src="common/683_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Shell-Programmierung" title="Zum Katalog: Shell-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Shell-Programmierung</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1137?GPP=opc">
                        <img src="common/749_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux-UNIX-Programmierung" title="Zum Katalog: Linux-UNIX-Programmierung"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux-UNIX-Programmierung</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/1004?GPP=opc">
                        <img src="common/644_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C/C++" title="Zum Katalog: C/C++"><br /><br /><br /><br /><br /><br /><br />&nbsp;C/C++</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/880?GPP=opc">
                        <img src="common/573_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: UML 2.0" title="Zum Katalog: UML 2.0"><br /><br /><br /><br /><br /><br /><br />&nbsp;UML 2.0</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/967?GPP=opc">
                        <img src="common/626_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Reguläre Ausdrücke" title="Zum Katalog: Reguläre Ausdrücke"><br /><br /><br /><br /><br /><br /><br />&nbsp;Reguläre Ausdrücke</a><br /><br /></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
                        <a href="http://www.galileocomputing.de/941?GPP=opc">
                        <img src="common/677_90px.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Linux" title="Zum Katalog: Linux"><br /><br /><br /><br /><br /><br /><br />&nbsp;Linux</a><br /><br /></td>
                    </tr>
                </table></td>
        </tr>
        <tr>
            <td><img src="common/leer.gif" height="2" width="1" border="0" /></td>
        </tr>
        <tr>
            <td>
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td class="tbl2" height="20" colspan="2"><strong>&nbsp;Shopping</strong></td>
                    </tr>
                    <tr>
                        <td valign="top" class="tbl2" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
                        <td valign="top">
                            <table cellspacing="3">
                                <tr>
                                    <td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br /><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=opc"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br /><br /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
</td>
</tr>
</table>
<br /><br />
<hr width="70%" align="center"><br />
<div align="center">
<p class="standard"><b>Copyright © Galileo Press 2006</b><br>F&uuml;r Ihren privaten Gebrauch d&uuml;rfen Sie die Online-Version nat&uuml;rlich ausdrucken. Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die gebundene Ausgabe: Das Werk einschlie&szlig;lich aller seiner Teile ist urheberrechtlich gesch&uuml;tzt. Alle Rechte vorbehalten einschlie&szlig;lich der Vervielf&auml;ltigung, &Uuml;bersetzung, Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>
</html>
